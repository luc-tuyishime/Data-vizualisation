{"version":3,"sources":["redux/store/initialState.js","assets/guide.svg","assets/whiteLogo.png","helpers/checkUser.js","assets/google.svg","assets/dashboard.svg","assets/settings.svg","assets/computer.svg","assets/burger.svg","redux/store/initialStates/userInitialState.js","redux/store/initialStates/ussdInitialState.js","redux/actions-types/apiActionsTypes.js","redux/actions-types/ussdActionTypes.js","redux/actions-types/UserActionsTypes.js","redux/reducers/user/user.reducer.js","redux/reducers/ussd/getUptime.js","redux/reducers/ussd/getRate.js","redux/reducers/ussd/getStartTime.js","redux/reducers/ussd/heapUsage.js","redux/reducers/ussd/nonHeapUsage.js","redux/reducers/ussd/getErrors.js","redux/reducers/ussd/duration.js","redux/reducers/ussd/getMenu.js","redux/reducers/ussd/postMenu.js","redux/reducers/ussd/getServiceDistribution.js","redux/reducers/ussd/performance.js","redux/reducers/ussd/getRateAgent.js","redux/reducers/ussd/durationAgent.js","redux/reducers/index.js","redux/reducers/user/index.js","redux/reducers/ussd/index.js","helpers/urlHelper.js","helpers/axiosHelper.js","middleware/apiMiddleware.js","redux/store/index.js","components/common/authentication/sideBlueDiv.jsx","components/common/button/button.jsx","firebase/firebase.utils.js","pages/authentication/sign-in.jsx","routes/authentication/Sign-in.js","components/common/sidebar/sidebar.js","components/common/header/header.js","components/dashboard/exportSelect.js","components/card/card.js","helpers/apiAction.js","helpers/getDifferentTime.js","components/dashboard/firstRow/smallCards/cardLeft.jsx","helpers/datePeriodOptions.js","redux/actions/USSD/uptime.js","redux/actions/USSD/rate.js","redux/actions/USSD/rateAgent.js","redux/actions/USSD/startTime.js","redux/actions/USSD/heapUsage.js","redux/actions/USSD/nonHeapUsage.js","redux/actions/USSD/errors.js","redux/actions/USSD/duration.js","redux/actions/USSD/durationAgent.js","redux/actions/USSD/serviceDistribution.js","helpers/convertSecondToDaysOrMinutes.js","components/dashboard/firstRow/smallCards/cardCenter.jsx","helpers/roundNumber.js","components/dashboard/firstRow/smallCards/cardRight.jsx","components/dashboard/firstRow/smallCards/cardRightLast.jsx","components/common/customTooltip/customTooltip.js","helpers/changeArrayToObject.js","helpers/formatXaxis.js","components/dashboard/ussdChart/RatesChart.jsx","components/dashboard/ussdChart/ErrorsChart.jsx","components/dashboard/ussdChart/durationChart.jsx","components/dashboard/analytics.jsx","components/menuManagement/draggableMenu/menu.jsx","routes/analytics/analytics.js","pages/dashboard/analytics.jsx","components/userGuide/guide.jsx","routes/profile/profile.js","pages/guide/guide.jsx","components/menuManagement/usedService/serviceDistributionChart.jsx","components/menuManagement/successRate/successRate.js","components/menuManagement/draggableMenu/card.jsx","redux/actions/menuManagement/getMenu.js","redux/actions/menuManagement/sortMenu.js","redux/actions/menuManagement/postMenu.js","components/menuManagement/menuManagement.jsx","routes/menuManagement/menuManagement.jsx","pages/menuManagement/menuManagement.jsx","components/dashboard/agent/smallCards/cardLeft.jsx","components/dashboard/agent/smallCards/cardCenter.jsx","components/dashboard/agent/smallCards/cardRight.jsx","components/dashboard/agent/smallCards/cardRightLast.jsx","components/dashboard/agent/ussdChart/RatesChart.jsx","components/dashboard/agent/ussdChart/ErrorsChart.jsx","components/dashboard/agent/ussdChart/durationChart.jsx","components/dashboard/agent/analytics.jsx","routes/index.js","routes/analytics/agent.js","pages/dashboard/agent.js","pages/NotFoundPage.js","App.js","redux/actions/user/get.js","index.js"],"names":["user","require","ussd","module","exports","profile","JSON","parse","localStorage","isAuth","tokenUser","Object","keys","length","error","currentUser","loading","listOfUptime","fetchUptime","message","errors","listOfRate","fetchRate","listOfRateAgent","fetchRateAgent","listOfStartTime","fetchStartTime","listOfHeapRate","fetchHeapRate","listOfNonHeapRate","fetchNonHeapRate","listOfError","fetchError","listOfDuration","fetchDuration","listOfDurationAgent","fetchDurationAgent","listOfMenu","fetchMenu","postMenu","listOfServiceDistribution","listOfPerformance","serviceDistribution","API_REQUEST","API_REQUEST_START","API_REQUEST_END","API_REQUEST_SUCCESS","API_REQUEST_FAILURE","GET_UPTIME_START","GET_UPTIME_END","GET_UPTIME_SUCCESS","GET_UPTIME_FAILURE","GET_RATE_START","GET_RATE_END","GET_RATE_SUCCESS","GET_RATE_FAILURE","GET_RATE_AGENT_START","GET_RATE_AGENT_END","GET_RATE_AGENT_SUCCESS","GET_RATE_AGENT_FAILURE","GET_START_TIME_START","GET_START_TIME_END","GET_START_TIME_SUCCESS","GET_START_TIME_FAILURE","GET_HEAP_USAGE_START","GET_HEAP_USAGE_END","GET_HEAP_USAGE_SUCCESS","GET_HEAP_USAGE_FAILURE","GET_NON_HEAP_USAGE_START","GET_NON_HEAP_USAGE_END","GET_NON_HEAP_USAGE_SUCCESS","GET_NON_HEAP_USAGE_FAILURE","GET_ERROR_START","GET_ERROR_END","GET_ERROR_SUCCESS","GET_ERROR_FAILURE","GET_DURATION_START","GET_DURATION_END","GET_DURATION_SUCCESS","GET_DURATION_FAILURE","GET_DURATION_AGENT_START","GET_DURATION_AGENT_END","GET_DURATION_AGENT_SUCCESS","GET_DURATION_AGENT_FAILURE","GET_MENU_START","GET_MENU_END","GET_MENU_SUCCESS","GET_MENU_FAILURE","POST_MENU_START","POST_MENU_END","POST_MENU_SUCCESS","POST_MENU_FAILURE","GET_SERVICE_DISTRIBUTION","GET_PERFORMANCE","UserActionsTypes","SET_CURRENT_USER","userReducer","state","type","payload","SET_CURRENT_USER_START","SET_CURRENT_USER_END","ussdActionsTypes","feUptime","data","result","success","ack","initialState","action","get","requestUptime","getRate","requestRate","getStartTime","requestStartTime","getHeapUsage","requestHeapUsage","getNonHeapUsage","requestNonHeapUsage","getErrors","requestErrors","getDuration","requestDuration","getMenu","requestMenu","postCardMenu","service","getPerformance","performance","getRateAgent","requestRateAgent","getDurationAgent","requestDurationAgent","location","window","protocol","hostname","port","process","REACT_APP_PROMETHEUS_BASE_URL","backend","REACT_APP_URL_FRONTEND","reactUrl","defaultUrl","urlHelper","URL","baseURL","setInterval","axios","create","apiMiddleware","dispatch","getState","next","a","apiActionsTypes","onStart","axiosHelper","httpOptions","method","url","onSuccess","onFailure","response","onEnd","middlewares","thunk","createStore","combineReducers","reducers","composeWithDevTools","applyMiddleware","SideBlueDiv","className","src","LOGO","alt","CustomButton","children","otherProps","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","exists","displayName","email","photoURL","createdAt","Date","set","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","Signin","handleClick","setState","this","props","to","span","offset","name","initialValues","remember","Item","onClick","COMPUTERLOGO","size","PureComponent","exact","protected","path","component","connect","Sider","Layout","Sidebar","openKeys","width","style","height","position","zIndex","mode","defaultSelectedKeys","selectedKeys","pathname","key","HOMELOGO","SETTINGSLOGO","Component","withRouter","Header","menu","signOut","padding","Navbar","title","backgroundColor","overlay","e","preventDefault","DownOutlined","SelectOption","Select","CustomCard","label","time","moment","toDate","today","yesterday","getTime","hourago","endDate","unix","yesterdayEnd","subtract","customStyles","control","base","minHeight","setHours","setMinutes","setSeconds","setMilliseconds","outputedUptime","startDate","options","value","getUptime","apiAction","dispatchAction","shouldUpdateEndDate","timer","updateEndDate","clearTimeout","setTimeout","REACT_APP_PROMETHEUS_HEAP_USED_GRAPH_QUERY","heapUsage","nonHeapUsage","REACT_APP_PROMETHEUS_DURATION_GRAPH_QUERY","duration","durationAgent","convertSecondsTodaysOrMinutes","seconds","days","Math","floor","minutes","antIcon","LoadingOutlined","fontSize","spin","CardLeft","uptime","componentDidMount","handleChange","mapIt","map","v","values","valueOutputed","getValue","shift","onChange","indicator","CardCenter","startTime","val","firstArray","startTimeValue","format","round","precision","Number","isInteger","pow","CardRight","clearInterval","slice","CardRightLast","CustomTooltip","active","text","labelText","textRight","mapArrayToObject","prop","pv","uv","mapServiceCount","count","mapServiceName","formatXAxis","tickItem","USSDAreaChartLeft","rate","barIndex","animation","Array","objs","getUVvalue","syncId","vertical","horizontal","strokeDasharray","minTickGap","stroke","tickFormatter","tick","fill","dataKey","domain","orientation","interval","content","cursor","animationDuration","isAnimationActive","isNaN","USSDAreaChartCenter","margin","top","right","left","bottom","USSDAreaChartRight","dy","Option","Content","console","log","updatedState","AnalyticsView","selectedOption","push","pull","defaultValue","styles","placeholder","marginLeft","Guide","SETTINGLOGO","labelsStatic","allDataStatic","ServiceDistribution","allData","labels","datasets","hoverBackgroundColor","id","tip","data2","failure","SuccessRate","i","stackId","marginRight","border","borderRadius","marginBottom","cardTarget","hover","monitor","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","hoverClientY","getClientOffset","y","moveCard","Card","isDragging","connectDragSource","connectDropTarget","opacity","float","BURGERICON","React","flow","DragSource","beginDrag","dragSource","DropTarget","dropTarget","update","Grid","cards","movedCard","loadingMenu","messageMenu","visibility","disabled","handleClose","sortMenu","dragCard","$splice","find","prevState","positionTo","positionFrom","componentDidUpdate","prevProps","card","errorsMenu","formData","MenuManagement","includes","Analytics","menuMangement","NotFoundPage","status","subTitle","App","unsubscribeFromAuth","sendMessage","msg","clientRef","setCurrentUser","onMessageReceive","store","onAuthStateChanged","onSnapshot","Snapshot","subscribeHeader","topics","onMessage","ref","client","routes","route","render","document","history","match","ReactDOM","DndProvider","HTML5Backend","getElementById"],"mappings":"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","file":"static/js/main.b9dfd47d.chunk.js","sourcesContent":["const user = require('./initialStates/userInitialState');\nconst ussd = require('./initialStates/ussdInitialState');\n\nmodule.exports = {\n  user,\n  ussd\n};\n","module.exports = __webpack_public_path__ + \"static/media/guide.ca3eb7b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteLogo.922b7ee1.png\";","module.exports = () => {\n  try {\n    const profile = JSON.parse(localStorage.user || '{}');\n    const isAuth = !!(localStorage.tokenUser && Object.keys(profile).length);\n    return {\n      profile,\n      isAuth\n    };\n  } catch (error) {\n    return {\n      profile: {},\n      isAuth: false\n    };\n  }\n};\n","module.exports = __webpack_public_path__ + \"static/media/google.f3655d8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.993674fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.a6aefd96.svg\";","module.exports = __webpack_public_path__ + \"static/media/computer.c31b076f.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.bb0dfd98.svg\";","module.exports = {\n  user: {\n    currentUser: null,\n    loading: false\n  }\n};\n","module.exports = {\n  listOfUptime: [],\n  fetchUptime: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfRate: [],\n  fetchRate: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfRateAgent: [],\n  fetchRateAgent: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfStartTime: [],\n  fetchStartTime: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfHeapRate: [],\n  fetchHeapRate: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfNonHeapRate: [],\n  fetchNonHeapRate: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfError: [],\n  fetchError: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfDuration: [],\n  fetchDuration: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfDurationAgent: [],\n  fetchDurationAgent: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfMenu: [],\n  fetchMenu: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  postMenu: {\n    loading: false,\n    message: '',\n    errors: {}\n  },\n  listOfServiceDistribution: [],\n  listOfPerformance: [],\n  serviceDistribution: {\n    loading: false,\n    message: '',\n    errors: {}\n  }\n};\n","export const API_REQUEST = 'API_REQUEST';\nexport const API_REQUEST_START = 'API_REQUEST_START';\nexport const API_REQUEST_END = 'API_REQUEST_END';\nexport const API_REQUEST_SUCCESS = 'API_REQUEST_SUCCESS';\nexport const API_REQUEST_FAILURE = 'API_REQUEST_FAILURE';\n","export const GET_UPTIME_START = 'GET_UPTIME_START';\nexport const GET_UPTIME_END = 'GET_UPTIME_END';\nexport const GET_UPTIME_SUCCESS = 'GET_UPTIME_SUCCESS';\nexport const GET_UPTIME_FAILURE = 'GET_UPTIME_FAILURE';\n\nexport const GET_RATE_START = 'GET_RATE_START';\nexport const GET_RATE_END = 'GET_RATE_END';\nexport const GET_RATE_SUCCESS = 'GET_RATE_SUCCESS';\nexport const GET_RATE_FAILURE = 'GET_RATE_FAILURE';\n\nexport const GET_RATE_AGENT_START = 'GET_RATE_AGENT_START';\nexport const GET_RATE_AGENT_END = 'GET_RATE_AGENT_END';\nexport const GET_RATE_AGENT_SUCCESS = 'GET_RATE_AGENT_SUCCESS';\nexport const GET_RATE_AGENT_FAILURE = 'GET_RATE_AGENT_FAILURE';\n\nexport const GET_START_TIME_START = 'GET_START_TIME_START';\nexport const GET_START_TIME_END = 'GET_START_TIME_END';\nexport const GET_START_TIME_SUCCESS = 'GET_START_TIME_SUCCESS';\nexport const GET_START_TIME_FAILURE = 'GET_START_TIME_FAILURE';\n\nexport const GET_HEAP_USAGE_START = 'GET_HEAP_USAGE_START';\nexport const GET_HEAP_USAGE_END = 'GET_HEAP_USAGE_END';\nexport const GET_HEAP_USAGE_SUCCESS = 'GET_HEAP_USAGE_SUCCESS';\nexport const GET_HEAP_USAGE_FAILURE = 'GET_HEAP_USAGE_FAILURE';\n\nexport const GET_NON_HEAP_USAGE_START = 'GET_NON_HEAP_USAGE_START';\nexport const GET_NON_HEAP_USAGE_END = 'GET_NON_HEAP_USAGE_END';\nexport const GET_NON_HEAP_USAGE_SUCCESS = 'GET_NON_HEAP_USAGE_SUCCESS';\nexport const GET_NON_HEAP_USAGE_FAILURE = 'GET_NON_HEAP_USAGE_FAILURE';\n\nexport const GET_ERROR_START = 'GET_ERROR_START';\nexport const GET_ERROR_END = 'GET_ERROR_END';\nexport const GET_ERROR_SUCCESS = 'GET_ERROR_SUCCESS';\nexport const GET_ERROR_FAILURE = 'GET_ERROR_FAILURE';\n\nexport const GET_DURATION_START = 'GET_DURATION_START';\nexport const GET_DURATION_END = 'GET_DURATION_END';\nexport const GET_DURATION_SUCCESS = 'GET_DURATION_SUCCESS';\nexport const GET_DURATION_FAILURE = 'GET_DURATION_FAILURE';\n\nexport const GET_DURATION_AGENT_START = 'GET_DURATION_AGENT_START';\nexport const GET_DURATION_AGENT_END = 'GET_DURATION_AGENT_END';\nexport const GET_DURATION_AGENT_SUCCESS = 'GET_DURATION_AGENT_SUCCESS';\nexport const GET_DURATION_AGENT_FAILURE = 'GET_DURATION_AGENT_FAILURE';\n\nexport const GET_MENU_START = 'GET_MENU_START';\nexport const GET_MENU_END = 'GET_MENU_END';\nexport const GET_MENU_SUCCESS = 'GET_MENU_SUCCESS';\nexport const GET_MENU_FAILURE = 'GET_MENU_FAILURE';\n\nexport const POST_MENU_START = 'POST_MENU_START';\nexport const POST_MENU_END = 'POST_MENU_END';\nexport const POST_MENU_SUCCESS = 'POST_MENU_SUCCESS';\nexport const POST_MENU_FAILURE = 'POST_MENU_FAILURE';\n\nexport const GET_SERVICE_DISTRIBUTION = 'GET_SERVICE_DISTRIBUTION';\nexport const GET_PERFORMANCE = 'GET_PERFORMANCE';\n","export const UserActionsTypes = { SET_CURRENT_USER: 'SET_CURRENT_USER' };\n","import { UserActionsTypes } from '../../actions-types/UserActionsTypes';\n\nconst userReducer = (state, { type, payload }) => {\n  switch (type) {\n    case UserActionsTypes.SET_CURRENT_USER_START:\n      return {\n        ...state,\n        user: { ...state.user, loading: true }\n      };\n    case UserActionsTypes.SET_CURRENT_USER_END:\n      return {\n        ...state,\n        user: { ...state.user, loading: false }\n      };\n    case UserActionsTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: payload,\n        loading: true\n      };\n\n    default:\n      return null;\n  }\n};\n\nexport default userReducer;\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_UPTIME_START:\n      return {\n        ...state,\n        fetchUptime: {\n          ...state.feUptime,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_UPTIME_END:\n      return {\n        ...state,\n        fetchUptime: {\n          ...state.fetchUptime,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_UPTIME_SUCCESS:\n      return {\n        ...state,\n        listOfUptime: payload.data.result,\n        fetchUptime: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_UPTIME_FAILURE:\n      return {\n        ...state,\n        fetchUptime: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_RATE_START:\n      return {\n        ...state,\n        fetchRate: {\n          ...state.fetchRate,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_RATE_END:\n      return {\n        ...state,\n        fetchRate: {\n          ...state.fetchRate,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_RATE_SUCCESS:\n      return {\n        ...state,\n        listOfRate: payload.data.result,\n        fetchRate: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_RATE_FAILURE:\n      return {\n        ...state,\n        fetchRate: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_START_TIME_START:\n      return {\n        ...state,\n        fetchStartTime: {\n          ...state.feUptime,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_START_TIME_END:\n      return {\n        ...state,\n        fetchStartTime: {\n          ...state.fetchUptime,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_START_TIME_SUCCESS:\n      return {\n        ...state,\n        listOfStartTime: payload.data.result,\n        fetchStartTime: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_START_TIME_FAILURE:\n      return {\n        ...state,\n        fetchStartTime: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_HEAP_USAGE_START:\n      return {\n        ...state,\n        fetchHeapRate: {\n          ...state.fetchHeapRate,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_HEAP_USAGE_END:\n      return {\n        ...state,\n        fetchHeapRate: {\n          ...state.fetchHeapRate,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_HEAP_USAGE_SUCCESS:\n      return {\n        ...state,\n        listOfHeapRate: payload.data.result,\n        fetchHeapRate: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_HEAP_USAGE_FAILURE:\n      return {\n        ...state,\n        fetchHeapRate: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_NON_HEAP_USAGE_START:\n      return {\n        ...state,\n        fetchNonHeapRate: {\n          ...state.fetchNonHeapRate,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_NON_HEAP_USAGE_END:\n      return {\n        ...state,\n        fetchNonHeapRate: {\n          ...state.fetchNonHeapRate,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_NON_HEAP_USAGE_SUCCESS:\n      return {\n        ...state,\n        listOfNonHeapRate: payload.data.result,\n        fetchNonHeapRate: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_NON_HEAP_USAGE_FAILURE:\n      return {\n        ...state,\n        fetchNonHeapRate: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_ERROR_START:\n      return {\n        ...state,\n        fetchError: {\n          ...state.fetchError,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_ERROR_END:\n      return {\n        ...state,\n        fetchError: {\n          ...state.fetchError,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_ERROR_SUCCESS:\n      return {\n        ...state,\n        listOfError: payload.data.result,\n        fetchError: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_ERROR_FAILURE:\n      return {\n        ...state,\n        fetchError: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_DURATION_START:\n      return {\n        ...state,\n        fetchDuration: {\n          ...state.fetchDuration,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_END:\n      return {\n        ...state,\n        fetchDuration: {\n          ...state.fetchDuration,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_SUCCESS:\n      return {\n        ...state,\n        listOfDuration: payload.data.result,\n        fetchDuration: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_FAILURE:\n      return {\n        ...state,\n        fetchDuration: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_MENU_START:\n      return {\n        ...state,\n        fetchMenu: {\n          ...state.fetchMenu,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_MENU_END:\n      return {\n        ...state,\n        fetchMenu: {\n          ...state.fetchMenu,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_MENU_SUCCESS:\n      return {\n        ...state,\n        listOfMenu: payload,\n        fetchMenu: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_MENU_FAILURE:\n      return {\n        ...state,\n        fetchMenu: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { message } from 'antd';\nimport { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.POST_MENU_START:\n      return {\n        ...state,\n        postMenu: {\n          ...state.postMenu,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.POST_MENU_END:\n      return {\n        ...state,\n        postMenu: {\n          ...state.postMenu,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.POST_MENU_SUCCESS:\n      message.success('Menus successfully saved', 6);\n      return {\n        ...state,\n        postMenu: {\n          loading: false,\n          message: payload.ack,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.POST_MENU_FAILURE:\n      return {\n        ...state,\n        postMenu: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_SERVICE_DISTRIBUTION:\n      return {\n        ...state,\n        listOfServiceDistribution: payload\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_PERFORMANCE:\n      return {\n        ...state,\n        listOfPerformance: payload\n      };\n\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_RATE_AGENT_START:\n      return {\n        ...state,\n        fetchRateAgent: {\n          ...state.fetchRateAgent,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_RATE_AGENT_END:\n      return {\n        ...state,\n        fetchRateAgent: {\n          ...state.fetchRateAgent,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_RATE_AGENT_SUCCESS:\n      return {\n        ...state,\n        listOfRateAgent: payload.data.result,\n        fetchRateAgent: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_RATE_AGENT_FAILURE:\n      return {\n        ...state,\n        fetchRateAgent: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case ussdActionsTypes.GET_DURATION_AGENT_START:\n      return {\n        ...state,\n        fetchDurationAgent: {\n          ...state.fetchDurationAgent,\n          message: '',\n          loading: true,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_AGENT_END:\n      return {\n        ...state,\n        fetchDurationAgent: {\n          ...state.fetchDurationAgent,\n          loading: false\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_AGENT_SUCCESS:\n      return {\n        ...state,\n        listOfDurationAgent: payload.data.result,\n        fetchDurationAgent: {\n          loading: false,\n          message: payload.message,\n          errors: {}\n        }\n      };\n    case ussdActionsTypes.GET_DURATION_AGENT_FAILURE:\n      return {\n        ...state,\n        fetchDurationAgent: {\n          loading: false,\n          message: '',\n          errors: payload.errors\n        }\n      };\n    default:\n      return null;\n  }\n};\n","import user from './user';\nimport ussd from './ussd';\n\nexport default {\n  user,\n  ussd\n};\n","import { user as initialState } from '../../store/initialState';\n\nimport user from './user.reducer';\n\nexport default (state = initialState, action) => {\n  const get = user(state, action);\n\n  return get || state;\n};\n","import { ussd as initialState } from '../../store/initialState';\n\nimport requestUptime from './getUptime';\nimport requestRate from './getRate';\nimport requestStartTime from './getStartTime';\nimport requestHeapUsage from './heapUsage';\nimport requestNonHeapUsage from './nonHeapUsage';\nimport requestErrors from './getErrors';\nimport requestDuration from './duration';\nimport requestMenu from './getMenu';\nimport postMenu from './postMenu';\nimport serviceDistribution from './getServiceDistribution';\nimport performance from './performance';\nimport requestRateAgent from './getRateAgent';\nimport requestDurationAgent from './durationAgent';\n\nexport default (state = initialState, action) => {\n  const get = requestUptime(state, action);\n  const getRate = requestRate(state, action);\n  const getStartTime = requestStartTime(state, action);\n  const getHeapUsage = requestHeapUsage(state, action);\n  const getNonHeapUsage = requestNonHeapUsage(state, action);\n  const getErrors = requestErrors(state, action);\n  const getDuration = requestDuration(state, action);\n  const getMenu = requestMenu(state, action);\n  const postCardMenu = postMenu(state, action);\n  const service = serviceDistribution(state, action);\n  const getPerformance = performance(state, action);\n  const getRateAgent = requestRateAgent(state, action);\n  const getDurationAgent = requestDurationAgent(state, action);\n\n  return (\n    get\n        || getRate\n        || getStartTime\n        || getHeapUsage\n        || getNonHeapUsage\n        || getErrors\n        || getDuration\n        || getMenu\n        || postCardMenu\n        || service\n        || getPerformance\n        || getRateAgent\n        || getDurationAgent\n        || state\n  );\n};\n","import 'dotenv/config';\n\nconst { location } = window;\nconst protocol = location.protocol && location.protocol;\nconst hostname = location.hostname && location.hostname;\nconst port = (location.port && `:${location.port}`) || '';\n\nconst { REACT_APP_PROMETHEUS_BASE_URL, REACT_APP_URL_FRONTEND } = process.env;\n\nconst frontend = {\n  reactUrl: REACT_APP_URL_FRONTEND,\n  herokuUrl: '',\n  defaultUrl: `${protocol}//${hostname}${port ? `:${port}` : ''}`\n};\n\nconst backend = {\n  reactUrl: REACT_APP_PROMETHEUS_BASE_URL,\n  defaultUrl: `${protocol}//${hostname}${port ? `:${port}` : ''}`\n};\n\nexport { frontend, backend };\n","import 'dotenv/config';\nimport axios from 'axios';\nimport * as urlHelper from './urlHelper';\n\nconst { NODE_ENV } = process.env;\nconst { reactUrl, defaultUrl } = urlHelper.backend;\n\nexport default (data = {}) => {\n  const { URL } = data;\n  const baseURL = URL\n        || (reactUrl && `${reactUrl}/api/v1`)\n        || (defaultUrl && `${defaultUrl}/api/v1`);\n\n  setInterval(() => {}, 6000);\n  return (NODE_ENV === 'test' && axios) || axios.create({ baseURL });\n};\n","import axiosHelper from '../helpers/axiosHelper';\nimport { apiActionsTypes } from '../redux/actions-types';\n\nconst apiMiddleware = ({ dispatch, getState }) => (next) => async ({\n  type = '',\n  payload = {}\n}) => {\n  if (type !== apiActionsTypes.API_REQUEST) {\n    return next({ type, payload });\n  }\n  try {\n    dispatch({ type: payload.onStart, payload: { loading: true } });\n    const { data } = await axiosHelper(payload.httpOptions)[payload.method](\n      payload.url,\n      payload.data\n    );\n    if (typeof payload.onSuccess === 'function') {\n      payload.onSuccess(data)(dispatch);\n    } else {\n      dispatch({ type: payload.onSuccess, payload: data });\n    }\n  } catch (error) {\n    dispatch({\n      type: payload.onFailure,\n      payload: (error.response && error.response.data) || { errors: { message: error.message } }\n    });\n  }\n\n  if (typeof payload.onEnd === 'function') {\n    payload.onEnd({ loading: false })(dispatch);\n  } else {\n    dispatch({ type: payload.onEnd, payload: { loading: false } });\n  }\n  return getState();\n};\n\nexport default apiMiddleware;\n","import 'dotenv/config';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport initialState from './initialState';\nimport reducers from '../reducers';\nimport apiMiddleware from '../../middleware/apiMiddleware';\n\nconst middlewares = [thunk, apiMiddleware];\n\nexport default createStore(\n  combineReducers(reducers),\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\n\nimport \"./sideBlueDiv.scss\";\nimport LOGO from \"../../../assets/whiteLogo.png\";\n\nconst SideBlueDiv = () => (\n    <div className=\"sidebluediv\">\n        <div className=\"bg-color\">\n            <img src={LOGO} alt=\"logo\" className=\"center-vertically\" />\n        </div>\n    </div>\n);\n\nexport default SideBlueDiv;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nimport \"./button.scss\";\n\nconst CustomButton = ({ children, ...otherProps }) => (\n    <div>\n        <Button className={`custom-button`} {...otherProps}>\n            {children}\n        </Button>\n    </div>\n);\n\nexport default CustomButton;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: 'AIzaSyBkLbN5N4aVhmOAi8_ji1LGdpXZCKWp3HA',\n  authDomain: 'irembo-cpanel.firebaseapp.com',\n  databaseURL: 'https://irembo-cpanel.firebaseio.com',\n  projectId: 'irembo-cpanel',\n  storageBucket: 'irembo-cpanel.appspot.com',\n  messagingSenderId: '535170001303',\n  appId: '1:535170001303:web:a9b0504570b3500f373cd2',\n  measurementId: 'G-TK7HHRL00L'\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email, photoURL } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      // console.log(\"Error creating users\", error.message);\n    }\n  }\n\n  return userRef; // we may need it for something else in our code\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Row, Col, Spin } from \"antd\";\nimport { Form } from \"antd\";\n\nimport SideBlueDiv from \"../../components/common/authentication/sideBlueDiv\";\nimport CustomButton from \"../../components/common/button/button\";\n\nimport { signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nimport COMPUTERLOGO from \"../../assets/google.svg\";\nimport \"./authentication.scss\";\n\nclass Signin extends PureComponent {\n    state = {\n        loading: false\n    };\n\n    handleClick = () => {\n        this.setState({\n            loading: true\n        });\n        signInWithGoogle();\n    };\n    render() {\n        const { currentUser } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className=\"authentication\">\n                {currentUser ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/\" />}\n                <Row>\n                    <Col span={8}>\n                        <SideBlueDiv />\n                    </Col>\n                    <Col span={16}>\n                        <Row>\n                            <Col span={8} offset={8}>\n                                <div className=\"sign-container\">\n                                    <Form\n                                        name=\"basic\"\n                                        initialValues={{\n                                            remember: true\n                                        }}>\n                                        <Form.Item>\n                                            <CustomButton\n                                                onClick={this.handleClick}\n                                                className=\"width-btn-login\">\n                                                <img\n                                                    className=\"\"\n                                                    src={COMPUTERLOGO}\n                                                    alt=\"logo\"\n                                                />\n                                                <span className=\"test-login-signin\">\n                                                    SIGN IN WITH IREMBO ACCOUNT\n                                                </span>\n                                                {loading ? <Spin size=\"large\" /> : \"\"}\n                                            </CustomButton>\n                                        </Form.Item>\n                                    </Form>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const mapStateToProps = ({ user: { currentUser, loading } }) => ({\n    currentUser,\n    loading\n});\n\nexport default connect(mapStateToProps, null)(Signin);\n","import Signin from '../../pages/authentication/sign-in';\n\nexport default {\n  exact: true,\n  name: 'Login',\n  protected: false,\n  path: '/',\n  component: Signin\n};\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './sidebar.scss';\n\nimport LOGO from '../../../assets/whiteLogo.png';\nimport HOMELOGO from '../../../assets/dashboard.svg';\nimport SETTINGSLOGO from '../../../assets/settings.svg';\nimport COMPUTERLOGO from '../../../assets/computer.svg';\n\nconst { Sider } = Layout;\n\nclass Sidebar extends Component {\n    state = { openKeys: [] };\n\n    static propTypes = { location: PropTypes.object.isRequired };\n\n    render() {\n      const { location } = this.props;\n\n      return (\n            <div className=\"slider\">\n                <Sider\n                    width={180}\n                    className=\"sider-class\"\n                    style={{\n                      height: '100vh',\n                      position: 'fixed',\n                      zIndex: 1\n                    }}>\n                    <div>\n                        <img src={LOGO} alt=\"logo\" className=\"logo-sidebar\" />\n                    </div>\n                    <Menu\n                        className=\"menu-icons\"\n                        mode=\"inline\"\n                        defaultSelectedKeys={['/dashboard']}\n                        selectedKeys={[location.pathname]}>\n                        <Menu.Item key=\"/dashboard\" className=\"text-side\">\n                            <img className=\"img-logo\" src={HOMELOGO} alt=\"logo\" />\n                            <Link to=\"/dashboard\">\n                                <span className=\"text-sider\">Dashboard</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"/menu-management\" className=\"text-side\">\n                            <img className=\"img-logo\" src={COMPUTERLOGO} alt=\"logo\" />\n                            <Link to=\"/menu-management\">\n                                <span className=\"text-sider\">USSD Menu</span>\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"/guide\" className=\"text-side\">\n                            <img className=\"img-logo\" src={SETTINGSLOGO} alt=\"logo\" />\n                            <Link to=\"/guide\">\n                                <span className=\"text-sider\">Users Guide</span>\n                            </Link>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n            </div>\n      );\n    }\n}\n\nexport default withRouter(Sidebar);\n","import React, { Component } from 'react';\nimport { Layout, Row, Col, Avatar, Menu, Dropdown } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DownOutlined } from '@ant-design/icons';\nimport { auth } from '../../../firebase/firebase.utils';\nimport './header.scss';\n\nconst { Header } = Layout;\n\nconst menu = (\n    <Menu>\n        <Menu.Item onClick={() => auth.signOut()} style={{ padding: '14px' }}>\n            Logout\n        </Menu.Item>\n    </Menu>\n);\n\nclass Navbar extends Component {\n  render() {\n    const { title, currentUser } = this.props;\n    return (\n            <div className=\"header\">\n                <Header style={{ padding: 0, backgroundColor: '#fff' }}>\n                    <Row>\n                        <Col span={3} />\n                        <Col span={8}>\n                            <p className=\"header-text\">{title}</p>\n                        </Col>\n                        <Col span={5} offset={8}>\n                            <div className=\"profile-float\">\n                                <Avatar size={35} src={currentUser.photoURL} />\n                                <Dropdown overlay={menu}>\n                                    <button\n                                        className=\"profile-container\"\n                                        onClick={(e) => e.preventDefault()}>\n                                        <span className=\"profile_name\">\n                                            {currentUser.displayName}\n                                        </span>{' '}\n                                        <DownOutlined className=\"outline-color\" />\n                                    </button>\n                                </Dropdown>\n                            </div>\n                        </Col>\n                    </Row>\n                </Header>\n            </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  currentUser: PropTypes.object\n};\n\nexport const mapStateToProps = ({ user: { currentUser } }) => ({ currentUser });\n\nexport default connect(mapStateToProps, null)(Navbar);\n","import Select from 'react-select';\n\nexport const SelectOption = Select;\n","import React from 'react';\nimport { Card } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst CustomCard = ({ children, ...otherProps }) => (\n    <div>\n        <Card {...otherProps}>{children}</Card>\n    </div>\n);\n\nCustomCard.propTypes = { children: PropTypes.any };\n\nexport default CustomCard;\n","import { apiActionsTypes } from '../redux/actions-types';\n\nexport default ({\n  url = '',\n  method = 'GET',\n  data = null,\n  httpOptions = {},\n  onStart = apiActionsTypes.API_REQUEST_START,\n  onEnd = apiActionsTypes.API_REQUEST_END,\n  onSuccess = apiActionsTypes.API_REQUEST_SUCCESS,\n  onFailure = apiActionsTypes.API_REQUEST_FAILURE,\n  label = ''\n}) => ({\n  type: apiActionsTypes.API_REQUEST,\n  payload: {\n    url,\n    method,\n    data,\n    httpOptions,\n    onSuccess,\n    onFailure,\n    onStart,\n    onEnd,\n    label\n  }\n});\n","import moment from 'moment';\n\nconst time = moment().toDate();\n\nconst today = new Date();\nconst yesterday = new Date(today.getTime() - 1000 * 60 * 60 * 24);\nconst hourago = new Date(today.getTime() - 1000 * 60 * 60);\n\nexport const yesterdayUnix = moment(yesterday).unix();\nexport const houragoUnix = moment(hourago).unix();\n\n// export const startDate = moment().subtract(1, \"days\").unix();\nexport const endDate = moment().unix();\n\nexport const yesterdayStart = moment().subtract(2, 'days').unix();\nexport const yesterdayEnd = moment().subtract(1, 'days').unix();\n\nexport const customStyles = {\n  control: (base) => ({\n    ...base,\n    height: 35,\n    minHeight: 35\n  })\n};\n\ntime.setHours(0);\ntime.setMinutes(0);\ntime.setSeconds(0);\ntime.setMilliseconds(0);\nexport const startDate = time / 1000;\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { getUptime } from \"../../../../redux/actions/USSD\";\nimport { convertSecondsTodaysOrMinutes } from \"../../../../helpers/convertSecondToDaysOrMinutes\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nlet outputedUptime;\n\nclass CardLeft extends Component {\n    state = {\n        uptime: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { getUptime } = this.props;\n        getUptime(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            uptime: props && props.listOfUptime,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { uptime, loading } = this.state;\n\n        const mapIt = uptime.map((v) => v.values);\n\n        const valueOutputed = mapIt && mapIt[mapIt.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.shift();\n\n        if (getValue) {\n            outputedUptime = getValue && getValue[1];\n        }\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    {loading && <Spin className=\"spin-position\" indicator={antIcon} />}\n                    <div className=\"text-ussd-center\">\n                        <div>\n                            <p className=\"text-title\">Uptime</p>\n                            <p className=\"text-minute\">\n                                {convertSecondsTodaysOrMinutes(outputedUptime)}\n                            </p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfUptime,\n        fetchUptime: { loading, message, errors }\n    }\n}) => ({\n    listOfUptime,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getUptime })(CardLeft);\n","import { startDate, endDate, yesterdayEnd } from './getDifferentTime';\n\nconst options = [\n  {\n    value: {\n      startDate,\n      endDate\n    },\n    label: 'Today'\n  },\n  {\n    value: {\n      startDate: yesterdayEnd,\n      endDate\n    },\n    label: 'Last 24 hour'\n  }\n];\n\nexport default options;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_UPTIME_QUERY } = process.env;\n\nconst getUptime = (startDate, endDate = moment().unix()) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_UPTIME_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_UPTIME_START,\n  onEnd: (data) => (dispatchAction) => {\n    getUptime(startDate)(dispatch);\n    dispatchAction({\n      type: ussdActionsTypes.GET_UPTIME_END,\n      payload: data\n    });\n  },\n  onSuccess: ussdActionsTypes.GET_UPTIME_SUCCESS,\n  onFailure: ussdActionsTypes.GET_UPTIME_FAILURE\n}));\n\nexport default getUptime;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_RATE_GRAPH_QUERY } = process.env;\n\nlet shouldUpdateEndDate = true;\nlet timer = null;\n\nconst getRate = (startDate, endDate = moment().unix(), updateEndDate = true) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_RATE_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_RATE_START,\n  onEnd: (data) => (dispatchAction) => {\n    clearTimeout(timer);\n    shouldUpdateEndDate = updateEndDate;\n    if (updateEndDate && shouldUpdateEndDate) {\n      timer = setTimeout(() => {\n        getRate(startDate)(dispatch);\n\n        dispatchAction({\n          type: ussdActionsTypes.GET_RATE_END,\n          payload: data\n        });\n      }, 4000);\n    }\n  },\n  onSuccess: ussdActionsTypes.GET_RATE_SUCCESS,\n  onFailure: ussdActionsTypes.GET_RATE_FAILURE\n}));\n\nexport default getRate;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_RATE_GRAPH_QUERY } = process.env;\n\nlet shouldUpdateEndDate = true;\nlet timer = null;\n\nconst getRateAgent = (startDate, endDate = moment().unix(), updateEndDate = true) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_RATE_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_RATE_AGENT_START,\n  onEnd: (data) => (dispatchAction) => {\n    clearTimeout(timer);\n    shouldUpdateEndDate = updateEndDate;\n    if (updateEndDate && shouldUpdateEndDate) {\n      timer = setTimeout(() => {\n        getRateAgent(startDate)(dispatch);\n\n        dispatchAction({\n          type: ussdActionsTypes.GET_RATE_AGENT_END,\n          payload: data\n        });\n      }, 4000);\n    }\n  },\n  onSuccess: ussdActionsTypes.GET_RATE_AGENT_SUCCESS,\n  onFailure: ussdActionsTypes.GET_RATE_AGENT_FAILURE\n}));\n\nexport default getRateAgent;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_START_TIME_QUERY } = process.env;\n\nconst getStartTime = (startDate, endDate = moment().unix()) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_START_TIME_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_START_TIME_START,\n  onEnd: (data) => (dispatchAction) => {\n    getStartTime(startDate)(dispatch);\n    dispatchAction({\n      type: ussdActionsTypes.GET_START_TIME_END,\n      payload: data\n    });\n  },\n  onSuccess: ussdActionsTypes.GET_START_TIME_SUCCESS,\n  onFailure: ussdActionsTypes.GET_START_TIME_FAILURE\n}));\n\nexport default getStartTime;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_HEAP_USED_GRAPH_QUERY } = process.env;\n\nconst heapUsage = (startDate, endDate = moment().unix()) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_HEAP_USED_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_HEAP_USAGE_START,\n  onEnd: (data) => (dispatchAction) => {\n    heapUsage(startDate)(dispatch);\n    dispatchAction({\n      type: ussdActionsTypes.GET_HEAP_USAGE_END,\n      payload: data\n    });\n  },\n  onSuccess: ussdActionsTypes.GET_HEAP_USAGE_SUCCESS,\n  onFailure: ussdActionsTypes.GET_HEAP_USAGE_FAILURE\n}));\n\nexport default heapUsage;\n","import moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_NON_HEAP_USED_GRAPH_QUERY } = process.env;\n\nconst nonHeapUsage = (startDate, endDate = moment().unix()) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_NON_HEAP_USED_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_NON_HEAP_USAGE_START,\n  onEnd: (data) => (dispatchAction) => {\n    nonHeapUsage(startDate)(dispatch);\n    dispatchAction({\n      type: ussdActionsTypes.GET_NON_HEAP_USAGE_END,\n      payload: data\n    });\n  },\n  onSuccess: ussdActionsTypes.GET_NON_HEAP_USAGE_SUCCESS,\n  onFailure: ussdActionsTypes.GET_NON_HEAP_USAGE_FAILURE\n}));\n\nexport default nonHeapUsage;\n","import 'dotenv/config';\nimport moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_ERRORS_GRAPH_QUERY } = process.env;\n\nconst errors = (startDate, endDate = moment().unix()) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_ERRORS_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_ERROR_START,\n  onEnd: (data) => (dispatchAction) => {\n    const timer = setTimeout(() => {\n      errors(startDate)(dispatch);\n      dispatchAction({\n        type: ussdActionsTypes.GET_ERROR_END,\n        payload: data\n      });\n    }, 6000);\n\n    return () => clearTimeout(timer);\n  },\n  onSuccess: ussdActionsTypes.GET_ERROR_SUCCESS,\n  onFailure: ussdActionsTypes.GET_ERROR_FAILURE\n}));\n\nexport default errors;\n","import 'dotenv/config';\nimport moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_DURATION_GRAPH_QUERY } = process.env;\n\nconst time = moment().unix();\nlet shouldUpdateEndDate = true;\nlet timer = null;\n\nconst duration = (startDate, endDate = time, updateEndDate = true) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_DURATION_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_DURATION_START,\n  onEnd: (data) => (dispatchAction) => {\n    clearTimeout(timer);\n    shouldUpdateEndDate = updateEndDate;\n    if (updateEndDate && shouldUpdateEndDate) {\n      timer = setTimeout(() => {\n        duration(startDate)(dispatch);\n\n        dispatchAction({\n          type: ussdActionsTypes.GET_DURATION_END,\n          payload: data\n        });\n      }, 6000);\n    }\n  },\n  onSuccess: ussdActionsTypes.GET_DURATION_SUCCESS,\n  onFailure: ussdActionsTypes.GET_DURATION_FAILURE\n}));\n\nexport default duration;\n","import 'dotenv/config';\nimport moment from 'moment';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_PROMETHEUS_DURATION_GRAPH_QUERY } = process.env;\n\nlet shouldUpdateEndDate = true;\nlet timer = null;\n\nconst durationAgent = (startDate, endDate = moment().unix(), updateEndDate = true) => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `/query_range?query=${REACT_APP_PROMETHEUS_DURATION_GRAPH_QUERY}&start=${startDate}&end=${endDate}&step=1m`,\n  onStart: ussdActionsTypes.GET_DURATION_AGENT_START,\n  onEnd: (data) => (dispatchAction) => {\n    clearTimeout(timer);\n    shouldUpdateEndDate = updateEndDate;\n    if (updateEndDate && shouldUpdateEndDate) {\n      timer = setTimeout(() => {\n        durationAgent(startDate)(dispatch);\n\n        dispatchAction({\n          type: ussdActionsTypes.GET_DURATION_AGENT_END,\n          payload: data\n        });\n      }, 6000);\n    }\n  },\n  onSuccess: ussdActionsTypes.GET_DURATION_AGENT_SUCCESS,\n  onFailure: ussdActionsTypes.GET_DURATION_AGENT_FAILURE\n}));\n\nexport default durationAgent;\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport const serviceDistribution = (data) => (dispatch) => dispatch({ type: ussdActionsTypes.GET_SERVICE_DISTRIBUTION, payload: data });\n","export const convertSecondsTodaysOrMinutes = (seconds) => {\n  const days = Math.floor(seconds / (24 * 60 * 60));\n  const minutes = Math.floor((seconds % 3600) / 60);\n\n  return days > 0 && days > 1\n    ? `${days} days `\n    : days > 0 && days === 1\n      ? 'day'\n      : minutes > 0\n        ? minutes + (minutes === 1 ? ' min ' : ' min')\n        : '';\n};\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { getStartTime } from \"../../../../redux/actions/USSD\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardCenter extends Component {\n    state = {\n        startTime: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { getStartTime } = this.props;\n        getStartTime(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            startTime: props && props.listOfStartTime,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { startTime, loading } = this.state;\n\n        const mapIt = startTime.map((v) => v.values);\n\n        const val = mapIt && mapIt[0];\n\n        const firstArray = val && val[0];\n\n        const startTimeValue = firstArray && firstArray[0];\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    <div className=\"text-ussd-center\">\n                        {loading && (\n                            <Spin className=\"spin-position\" indicator={antIcon} />\n                        )}\n\n                        <div>\n                            <p className=\"text-title\">Start time</p>\n                            <p className=\"text-minute\">\n                                {moment\n                                    .unix(startTimeValue)\n                                    .format(\"YYYY-MM-DD HH:mm:ss\")}\n                            </p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfStartTime,\n        fetchStartTime: { loading, message, errors }\n    }\n}) => ({\n    listOfStartTime,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getStartTime })(CardCenter);\n","export function round(value, precision) {\n  if (Number.isInteger(precision)) {\n    const shift = Math.pow(10, precision);\n    // Limited preventing decimal issue\n    return Math.round(value * shift + 0.00000000000001) / shift;\n  }\n  return Math.round(value);\n}\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { heapUsage } from \"../../../../redux/actions/USSD\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { round } from \"../../../../helpers/roundNumber\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardRight extends Component {\n    state = {\n        heapUsage: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { heapUsage } = this.props;\n        heapUsage(startDate, moment().unix());\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n\n    static getDerivedStateFromProps(props) {\n        return {\n            heapUsage: props && props.listOfHeapRate,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { heapUsage, loading } = this.state;\n\n        const mapIt = heapUsage.map((v) => v.values);\n\n        const val = mapIt.slice(-1)[0];\n\n        const valueOutputed = val && val[val.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.slice(1);\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    {loading && <Spin className=\"spin-position\" indicator={antIcon} />}\n                    <div className=\"text-ussd-center\">\n                        <div>\n                            <p className=\"text-title\">Heap used</p>\n                            <p className=\"text-minute\">{round(getValue, 2)}%</p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfHeapRate,\n        fetchHeapRate: { loading, message, errors }\n    }\n}) => ({\n    listOfHeapRate,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { heapUsage })(CardRight);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport { nonHeapUsage } from \"../../../../redux/actions/USSD\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { round } from \"../../../../helpers/roundNumber\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardRightLast extends Component {\n    state = {\n        nonHeapUsage: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { nonHeapUsage } = this.props;\n        nonHeapUsage(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            nonHeapUsage: props && props.listOfNonHeapRate,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { nonHeapUsage, loading } = this.state;\n\n        const mapIt = nonHeapUsage.map((v) => v.values);\n\n        const val = mapIt.slice(-1)[0];\n\n        const valueOutputed = val && val[val.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.slice(1);\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"96%\", height: \"95px\" }}>\n                    <div className=\"text-ussd-center\">\n                        {loading && (\n                            <Spin className=\"spin-position\" indicator={antIcon} />\n                        )}\n\n                        <div>\n                            <p className=\"text-title\">Non-Heap used</p>\n                            <p className=\"text-minute\">{round(getValue, 2)}%</p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfNonHeapRate,\n        fetchNonHeapRate: { loading, message, errors }\n    }\n}) => ({\n    listOfNonHeapRate,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { nonHeapUsage })(CardRightLast);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { round } from \"../../../helpers/roundNumber\";\n\nimport \"./customizeTooltip.scss\";\n\nexport const CustomTooltip = ({ active, payload, label, text, labelText, textRight }) => {\n    if (active) {\n        return (\n            <div className=\"bg-tooltip\">\n                <p className=\"subscribers-by-channel-tooltip-label\">\n                    {labelText} {`${moment.unix(label).format(\"YYYY-MM-DD HH:mm:ss  \")}`}\n                </p>\n                <p className=\"subscribers-by-channel-tooltip-value\">\n                    {text} : {` ${payload && round(payload[0].value, 2)}`} {textRight}\n                </p>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nexport const CustomTooltipPerformance = ({ active, payload, label, text, textLabel }) => {\n    if (active) {\n        return (\n            <div className=\"bg-tooltip\">\n                <p className=\"subscribers-by-channel-tooltip-label\">\n                    {textLabel} : {label}\n                </p>\n                <p className=\"subscribers-by-channel-tooltip-value\">\n                    {text} : {payload}\n                </p>\n            </div>\n        );\n    }\n\n    return null;\n};\n","import moment from \"moment\";\n\nexport const mapArrayToObject = (prop) => ({\n    pv: prop && moment.unix(prop[0]).format(\"HH:mm:ss\"),\n    uv: prop && prop[1],\n    name: prop && prop[0]\n});\n\nexport const mapArrayPerformance = (prop) => ({\n    pv: prop && prop.count,\n    uv: prop && prop.count,\n    name: prop && prop.hour\n});\n\nexport const mapSuccessAndFailure = (prop) => ({\n    pv: prop && prop.failure,\n    uv: prop && prop.success,\n    name: prop && prop.name\n});\n\nexport const mapServiceCount = (prop) => prop && prop.count;\n\nexport const mapServiceName = (prop) => prop && prop.name;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nexport const formatXAxis = (tickItem) => moment.unix(tickItem).format('HH:mm');\n\nexport const CustomLabelList = (props) => {\n  const { x, y, fill, value, children } = props;\n\n  return (\n        <text x={x} y={y} dy={25} dx={25} fill={fill} fontSize={12} textAnchor=\"middle\">\n            {value} {children}\n        </text>\n  );\n};\n\nCustomLabelList.propTypes = {\n  x: PropTypes.string,\n  y: PropTypes.string,\n  fill: PropTypes.string,\n  value: PropTypes.string,\n  children: PropTypes.string\n};\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../common/customTooltip/customTooltip\";\nimport { getRate } from \"../../../redux/actions/USSD\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { mapArrayToObject } from \"../../../helpers/changeArrayToObject\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../helpers/formatXaxis\";\nimport { startDate } from \"../../../helpers/getDifferentTime\";\n\nimport \"../../dashboard/dashboard.scss\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nlet duration = 1000;\n\nclass USSDAreaChartLeft extends Component {\n    state = {\n        rate: [],\n        barIndex: \"uv\",\n        loading: false,\n        endDate: moment().unix()\n    };\n\n    componentDidMount = () => {\n        const { getRate } = this.props;\n        getRate(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            rate: props && props.listOfRate,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { rate, loading, barIndex, animation } = this.state;\n\n        const mapIt = rate.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        let objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"99%\" }}>\n                    <div>\n                        <p className=\"sales-text\">Rate</p>\n\n                        {loading && (\n                            <Spin className=\"spin-position-chart\" indicator={antIcon} />\n                        )}\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            <AreaChart\n                                onChange={handleChange}\n                                width={90}\n                                height={300}\n                                data={objs}\n                                syncId=\"anyIdd2\">\n                                <CartesianGrid\n                                    vertical={false}\n                                    horizontal\n                                    strokeDasharray=\"1 1\"\n                                />\n                                <XAxis\n                                    minTickGap={30}\n                                    stroke=\"white\"\n                                    tickFormatter={formatXAxis}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    dataKey=\"name\"\n                                />\n                                <YAxis\n                                    domain={[\"auto\", \"auto\"]}\n                                    orientation=\"left\"\n                                    tickFormatter={(label) => `${label} ops`}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    stroke=\"white\"\n                                    interval=\"preserveStartEnd\"\n                                />\n                                <Tooltip\n                                    content={\n                                        <CustomTooltip text=\"- HTTP\" textRight=\"ops\" />\n                                    }\n                                    cursor={true}\n                                />\n                                <Area\n                                    animationDuration={duration}\n                                    isAnimationActive={animation}\n                                    type=\"monotone\"\n                                    dataKey={barIndex}\n                                    stroke=\"#40c4ff\"\n                                    fill=\"rgba(159, 219, 253, 0.25)\"\n                                />\n                            </AreaChart>\n                        </ResponsiveContainer>\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 4) : \"\"}\n                            </span>{\" \"}\n                            ops\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfRate,\n        fetchRate: { loading, message, errors }\n    }\n}) => ({\n    listOfRate,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getRate })(USSDAreaChartLeft);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../common/customTooltip/customTooltip\";\nimport { errors } from \"../../../redux/actions/USSD\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { mapArrayToObject } from \"../../../helpers/changeArrayToObject\";\nimport { startDate } from \"../../../helpers/getDifferentTime\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../helpers/formatXaxis\";\n\nimport \"../../dashboard/dashboard.scss\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass USSDAreaChartCenter extends Component {\n    state = {\n        errors: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { errors } = this.props;\n        errors(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            errors: props && props.listOfError,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { errors, loading } = this.state;\n\n        const mapIt = errors.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        var objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\", height: \"415px\" }}>\n                    <div>\n                        <p className=\"sales-text\">Errors</p>\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            {loading ? (\n                                <div className=\"center-spin-vertically\">\n                                    <Spin indicator={antIcon} />\n                                </div>\n                            ) : (errors && errors.length === 0) || val === \"0\" ? (\n                                <div className=\"center-spin-vertically\">\n                                    <p className=\"no-data\">No data..</p>\n                                </div>\n                            ) : (\n                                <AreaChart\n                                    width={300}\n                                    height={200}\n                                    data={objs}\n                                    syncId=\"anyIdd222\"\n                                    margin={{\n                                        top: 10,\n                                        right: 30,\n                                        left: 0,\n                                        bottom: 0\n                                    }}>\n                                    <CartesianGrid\n                                        vertical={false}\n                                        horizontal\n                                        strokeDasharray=\"1 1\"\n                                    />\n                                    <XAxis\n                                        minTickGap={30}\n                                        stroke=\"white\"\n                                        tickFormatter={formatXAxis}\n                                        tick={{\n                                            fill: \"rgba(47, 63, 82, 0.5)\",\n                                            fontSize: 12\n                                        }}\n                                        dataKey=\"name\"\n                                    />\n                                    <YAxis\n                                        orientation=\"left\"\n                                        tickFormatter={(label) => `${label} ops`}\n                                        tick={{\n                                            fill: \"rgba(47, 63, 82, 0.5)\",\n                                            fontSize: 12\n                                        }}\n                                        stroke=\"white\"\n                                        interval=\"preserveStartEnd\"\n                                    />\n                                    <Tooltip\n                                        content={\n                                            <CustomTooltip\n                                                text=\"- HTTP\"\n                                                textRight=\"ops\"\n                                            />\n                                        }\n                                        cursor={true}\n                                    />\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey=\"uv\"\n                                        stroke=\"rgba(159, 219, 253, 0.46)\"\n                                        fill=\"rgba(159, 219, 253, 0.46)\"\n                                    />\n                                </AreaChart>\n                            )}\n                        </ResponsiveContainer>\n                        <span></span>\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 4) : \"\"}\n                            </span>{\" \"}\n                            ops\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfError,\n        fetchError: { loading, message, errors }\n    }\n}) => ({\n    listOfError,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { errors })(USSDAreaChartCenter);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../common/customTooltip/customTooltip\";\nimport { duration } from \"../../../redux/actions/USSD\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { startDate } from \"../../../helpers/getDifferentTime\";\nimport { mapArrayToObject } from \"../../../helpers/changeArrayToObject\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../helpers/formatXaxis\";\n\nimport \"../../dashboard/dashboard.scss\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nlet durationChart = 1000;\n\nclass USSDAreaChartRight extends Component {\n    state = {\n        duration: [],\n        loading: false,\n        barIndex: \"uv\",\n        left: 0,\n        right: 0\n    };\n\n    componentDidMount = () => {\n        const { duration } = this.props;\n        duration(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            duration: props && props.listOfDuration,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { duration, loading, barIndex, animation, left, right } = this.state;\n\n        const mapIt = duration.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        var objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"99%\" }}>\n                    <div>\n                        <p className=\"sales-text\">Duration</p>\n                        {loading && (\n                            <Spin className=\"spin-position-chart\" indicator={antIcon} />\n                        )}\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            <AreaChart\n                                onChange={handleChange}\n                                width={400}\n                                height={200}\n                                data={objs}\n                                syncId=\"anyIdd21231\"\n                                margin={{\n                                    top: 10,\n                                    right: 40,\n                                    left: 0,\n                                    bottom: 0\n                                }}>\n                                <CartesianGrid\n                                    vertical={false}\n                                    horizontal\n                                    strokeDasharray=\"1 1\"\n                                />\n                                <XAxis\n                                    // dx={70}\n                                    minTickGap={30}\n                                    stroke=\"white\"\n                                    tickFormatter={formatXAxis}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    dataKey=\"name\"\n                                    padding={{ left: left, right: right }}\n                                    domain={[\"dataMin -5\", \"dataMax + 5\"]}\n                                />\n                                <YAxis\n                                    dy={-5}\n                                    domain={[\"auto\", \"auto\"]}\n                                    orientation=\"left\"\n                                    tickFormatter={(label) => `${label} ms`}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    stroke=\"white\"\n                                    interval=\"preserveStartEnd\"\n                                />\n                                <Tooltip\n                                    content={\n                                        <CustomTooltip\n                                            text=\"- HTTP - AVG\"\n                                            textRight=\"ms\"\n                                        />\n                                    }\n                                    cursor={true}\n                                />\n                                <Area\n                                    animationDuration={durationChart}\n                                    isAnimationActive={animation}\n                                    type=\"monotone\"\n                                    dataKey={barIndex}\n                                    stroke=\"#40c4ff\"\n                                    fill=\"rgba(159, 219, 253, 0.25)\"\n                                />\n                            </AreaChart>\n                        </ResponsiveContainer>\n\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP AVG Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 2) : \"\"}\n                            </span>{\" \"}\n                            ms\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfDuration,\n        fetchDuration: { loading, message, errors }\n    }\n}) => ({\n    listOfDuration,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { duration })(USSDAreaChartRight);\n","import React, { Component } from \"react\";\nimport { Row, Col, Select, Layout } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { SelectOption } from \"./exportSelect\";\nimport CardLeft from \"./firstRow/smallCards/cardLeft\";\nimport CardCenter from \"./firstRow/smallCards/cardCenter\";\nimport CardRight from \"./firstRow/smallCards/cardRight\";\nimport {\n    getRate,\n    duration,\n    getStartTime,\n    getUptime,\n    heapUsage,\n    nonHeapUsage\n} from \"../../redux/actions/USSD\";\nimport CardRightLast from \"./firstRow/smallCards/cardRightLast\";\nimport USSDAreaChartLeft from \"./ussdChart/RatesChart\";\nimport USSDAreaChartCenter from \"./ussdChart/ErrorsChart\";\nimport { customStyles } from \"../../helpers/getDifferentTime\";\nimport { options } from \"../../helpers\";\n\nimport \"./analytics.scss\";\nimport USSDAreaChartRight from \"./ussdChart/durationChart\";\n\nconst { Option } = Select;\n\nconst { Sider, Content } = Layout;\n\nfunction handleChange(value) {\n    console.log(`selected ${value}`);\n}\n\nclass AnalyticsView extends Component {\n    state = {\n        selectedOption: \"\"\n    };\n\n    handleChange = (selectedOption) => {\n        const { getRate, duration } = this.props;\n        this.setState({ selectedOption });\n\n        if (selectedOption) {\n            const { value, label } = selectedOption;\n            const { startDate, endDate } = value;\n\n            if (label === \"Last 24 hour\") {\n                getRate(startDate, moment().unix(), false);\n                duration(startDate, moment().unix(), false);\n            } else {\n                getRate(startDate, endDate, true);\n                duration(startDate, endDate, true);\n            }\n        }\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        return (\n            <div className=\"dashboard-main-container\">\n                <Layout>\n                    <Layout style={{ width: \"99%\", backgroundColor: \"#fafafa\" }}>\n                        <Content style={{ backgroundColor: \"#fafafa\" }}>\n                            <Row className=\"select-draw-padding\">\n                                <Col className=\"calendar-position\" span={18} push={6}>\n                                    {\" \"}\n                                </Col>\n                                <Col span={6} pull={18}>\n                                    <div className=\"container\">\n                                        <div className=\"box1\">\n                                            <div className=\"application-border\">\n                                                <p>Applications</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"box2\">\n                                            <Select\n                                                className=\"select-style\"\n                                                defaultValue=\"lucy\"\n                                                style={{ width: 220 }}\n                                                onChange={handleChange}>\n                                                <Option value=\"lucy\">\n                                                    <Link to=\"/dashboard\">\n                                                        irembo-ussd-app\n                                                    </Link>\n                                                </Option>\n                                                <Option value=\"jack\">\n                                                    <Link to=\"/agent\">\n                                                        irembo-ussd-agent\n                                                    </Link>\n                                                </Option>\n                                            </Select>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Content>\n                        <Sider style={{ backgroundColor: \"#fafafa\" }}>\n                            <div className=\"calendar-position\">\n                                <div className=\"search-width\">\n                                    <SelectOption\n                                        value={selectedOption}\n                                        onChange={this.handleChange}\n                                        options={options}\n                                        styles={customStyles}\n                                        placeholder=\"Today\"\n                                    />\n                                </div>\n                            </div>\n                        </Sider>\n                    </Layout>\n                </Layout>\n\n                <Row>\n                    <Col span={6}>\n                        <CardLeft handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardCenter handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardRight handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardRightLast handleChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={12}>\n                        <USSDAreaChartLeft\n                            handleChange={this.handleChange}\n                            selectedOption={selectedOption}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <USSDAreaChartCenter />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24}>\n                        <USSDAreaChartRight\n                            handleChange={this.handleChange}\n                            selectedOption={selectedOption}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {\n    getRate,\n    duration,\n    getStartTime,\n    getUptime,\n    heapUsage,\n    nonHeapUsage\n})(AnalyticsView);\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { getMenu, sortMenu, postMenu } from \"../../../redux/actions/menuManagement\";\n\nimport \"../menu.scss\";\n\nconst update = require(\"immutability-helper\");\n\nlet updatedState;\n\nclass Grid extends Component {\n    state = {\n        cards: [],\n        movedCard: {},\n        loading: false,\n        loadingMenu: false,\n        messageMenu: \"\",\n        visibility: false,\n        disabled: false\n    };\n\n    componentDidMount = () => {\n        const { getMenu } = this.props;\n        getMenu();\n    };\n\n    handleClose = () => {\n        this.setState({\n            visibility: false\n        });\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            cards: props && props.listOfMenu,\n            loading: props && props.loading,\n            loadingMenu: props && props.loadingMenu,\n            messageMenu: props && props.messageMenu\n        };\n    }\n\n    moveCard = (dragIndex, hoverIndex) => {\n        const { cards, movedCard } = this.state;\n        const { sortMenu, postMenu, getMenu } = this.props;\n\n        const dragCard = cards[dragIndex];\n\n        updatedState = update(this.state, {\n            cards: {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, dragCard]\n                ]\n            }\n        });\n\n        console.log(\"updatedState :>> \", updatedState.cards[dragIndex]);\n        console.log(\"dragCard\", dragCard);\n\n        let index = dragIndex;\n        updatedState.cards.find((value, i) => {\n            return value.title === dragCard.title ? (index = i + 1) : \"\";\n        });\n\n        sortMenu(updatedState.cards);\n        this.setState((prevState) => ({\n            ...prevState,\n            movedCard: { positionTo: index, positionFrom: dragCard.position }\n        }));\n\n        console.log(\"Position from :>> \", movedCard.positionFrom);\n        console.log(\"Position to :>> \", movedCard.positionTo);\n\n        const { ...formData } = movedCard;\n\n        if (postMenu(formData)) {\n            setTimeout(() => getMenu(), 3000);\n        }\n    };\n\n    componentDidUpdate = (prevProps) => {\n        console.log(\"prevProps :>> \", prevProps);\n        console.log(\"this.state :>> \", this.state);\n    };\n\n    render() {\n        const { cards, loading } = this.state;\n\n        return (\n            <div className=\"card-container menu-manaagement\">\n                <p className=\"text-drag-drop\">\n                    Drag and Drop to change the order of the menus\n                </p>\n\n                {loading ? (\n                    <div className=\"spin-menu-container\">\n                        <Spin size=\"large\" />\n                    </div>\n                ) : (\n                    cards.map((card, i) => {\n                        return (\n                            <Card\n                                key={card.position}\n                                index={i}\n                                position={i + 1}\n                                text={card.title}\n                                moveCard={this.moveCard}\n                            />\n                        );\n                    })\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfMenu,\n        fetchMenu: { loading, message, errors },\n        postMenu: { loading: loadingMenu, message: messageMenu, errors: errorsMenu }\n    }\n}) => ({\n    listOfMenu,\n    loading,\n    message,\n    errors,\n    loadingMenu,\n    messageMenu,\n    errorsMenu\n});\n\nexport default connect(mapStateToProps, { getMenu, sortMenu, postMenu })(Grid);\n","import Analytics from '../../pages/dashboard/analytics';\n\nexport default {\n  exact: true,\n  name: 'Dashboard',\n  protected: true,\n  path: '/dashboard',\n  component: Analytics\n};\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport Sidebar from \"../../components/common/sidebar/sidebar\";\nimport Navbar from \"../../components/common/header/header\";\nimport AnalyticsView from \"../../components/dashboard/analytics\";\n\nimport \"./analytics.scss\";\n\nclass Analytics extends Component {\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <Navbar title=\"Dashboard USSD\" />\n                <div className=\"bg-color\">\n                    <Sidebar />\n                    <Row>\n                        <Col span={2} />\n                        <Col span={22}>\n                            <div style={{ marginLeft: \"65px\" }}>\n                                <AnalyticsView />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"profile-container\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Analytics;\n","import React, { Component } from \"react\";\nimport CustomCard from \"../card/card\";\nimport { Row, Col } from \"antd\";\n\nimport SETTINGLOGO from \"../../assets/guide.svg\";\n\nimport \"../../pages/authentication/authentication.scss\";\nimport \"./profile.scss\";\n\nclass Guide extends Component {\n    render() {\n        return (\n            <div className=\"authentication\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\" }}>\n                    <div>\n                        <Row>\n                            <Col span={1}>\n                                <div className=\"bg-rounded-profile\">\n                                    <img className=\"\" src={SETTINGLOGO} alt=\"logo\" />\n                                </div>\n                            </Col>\n                            <Col span={19}>\n                                <div className=\"password-container\">\n                                    <p className=\"profile-text-setting\">\n                                        Which data am I seeing on the Dashboard?\n                                    </p>\n                                    <p>\n                                        On the dashboard, you will be able to see the\n                                        following metrics:\n                                    </p>\n                                    <p>\n                                        -{\" \"}\n                                        <span className=\"profile-text-subtext\">\n                                            Requests\n                                        </span>\n                                        : Those are the number of requests sent to the\n                                        USSD app. It allows you to analyze peak times and\n                                        usage of your application.\n                                    </p>\n                                    <p>\n                                        -{\" \"}\n                                        <span className=\"profile-text-subtext\">\n                                            Latency\n                                        </span>\n                                        : This is the response time to the server.\n                                    </p>\n                                    <p>\n                                        -{\" \"}\n                                        <span className=\"profile-text-subtext\">\n                                            CPU & Memory Usage\n                                        </span>\n                                        : This is the real-time consumption of the\n                                        physical resources on your servers.\n                                    </p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </CustomCard>\n\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\" }}>\n                    <div>\n                        <Row>\n                            <Col span={1}>\n                                <div className=\"bg-rounded-profile\">\n                                    <img className=\"\" src={SETTINGLOGO} alt=\"logo\" />\n                                </div>\n                            </Col>\n                            <Col span={19}>\n                                <div className=\"password-container\">\n                                    <p className=\"profile-text-setting\">\n                                        Which data am I seeing on the USSD analytics?\n                                    </p>\n                                    <p>\n                                        On the USSD analytics, you will be able to analyze\n                                        the number of users that used your app, as well as\n                                        the average session duration and the bounce rate\n                                        (=number of people who entered the USSD\n                                        application and left without taking an action).\n                                    </p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </CustomCard>\n\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\" }}>\n                    <div>\n                        <Row>\n                            <Col span={1}>\n                                <div className=\"bg-rounded-profile\">\n                                    <img className=\"\" src={SETTINGLOGO} alt=\"logo\" />\n                                </div>\n                            </Col>\n                            <Col span={19}>\n                                <div className=\"password-container\">\n                                    <p className=\"profile-text-setting\">\n                                        How can I use the USSD menu management tool?\n                                    </p>\n                                    <p>\n                                        As part of our project, we availed for you the\n                                        ability to change the order of the{\" \"}\n                                        <span className=\"profile-text-subtext\">\n                                            primary USSD menu only.\n                                        </span>{\" \"}\n                                        By simply dragging and dropping, you are able to\n                                        rearrange the order of items in the menu. We also\n                                        availed a graph with the most used services, so\n                                        that it can give you insights on what to\n                                        prioritize.\n                                    </p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </CustomCard>\n\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\" }}>\n                    <div>\n                        <Row>\n                            <Col span={1}>\n                                <div className=\"bg-rounded-profile\">\n                                    <img className=\"\" src={SETTINGLOGO} alt=\"logo\" />\n                                </div>\n                            </Col>\n                            <Col span={19}>\n                                <div className=\"password-container\">\n                                    <p className=\"profile-text-setting\">\n                                        How can I add, remove or change users’ accesses to\n                                        the web portal?\n                                    </p>\n                                    <p>\n                                        As requested, all user authentications features\n                                        are done through Google API. As part of the code\n                                        package, you received access to Firebase, which is\n                                        the tool used for signup and signin through\n                                        Google. You can add or remove users from there\n                                        (initially, we added the email adresses you\n                                        provided).\n                                    </p>\n                                    <p>\n                                        Note that all tasks related to changing email,\n                                        change password, or reset password, should be done\n                                        through Google only.\n                                    </p>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nexport default Guide;\n","import GuideContainer from '../../pages/guide/guide';\n\nexport default {\n  exact: true,\n  name: 'Guide',\n  protected: true,\n  path: '/guide',\n  component: GuideContainer\n};\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport Sidebar from \"../../components/common/sidebar/sidebar\";\nimport Navbar from \"../../components/common/header/header\";\nimport Guide from \"../../components/userGuide/guide\";\n\nimport \"./profile.scss\";\n\nclass GuideContainer extends Component {\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <Navbar title=\"User guide\" />\n                <div className=\"bg-color\">\n                    <Sidebar />\n                    <Row>\n                        <Col span={2} />\n                        <Col span={22}>\n                            <div style={{ marginLeft: \"65px\" }}>\n                                <Guide />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"profile-container\"></div>\n            </div>\n        );\n    }\n}\n\nexport default GuideContainer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { mapServiceCount, mapServiceName } from \"../../../helpers/changeArrayToObject\";\nimport { serviceDistribution } from \"../../../redux/actions/USSD\";\nimport \"../../dashboard/dashboard.scss\";\nimport \"../menu.scss\";\n\nconst labelsStatic = [\"Traffic fines\", \"Mutuelles\"];\nconst allDataStatic = [10, 35];\n\nclass ServiceDistribution extends Component {\n    state = {\n        allData: [],\n        labels: []\n    };\n\n    static getDerivedStateFromProps(props) {\n        const finalArray = props && props.listOfServiceDistribution.map(mapServiceCount);\n        let finalLabels = props && props.listOfServiceDistribution.map(mapServiceName);\n        return {\n            allData: finalArray,\n            labels: finalLabels\n        };\n    }\n\n    componentDidUpdate() {\n        serviceDistribution(this.state.allData);\n    }\n\n    render() {\n        const { allData, labels } = this.state;\n        console.log(\"Data ==>>>\", allData);\n        const data = {\n            labels: labels.length > 0 ? labels : labelsStatic,\n            datasets: [\n                {\n                    data: allData.length > 0 ? allData : allDataStatic,\n                    backgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#827717\",\n                        \"#673ab7\",\n                        \"#1a237e\",\n                        \"#ff1744\",\n                        \"#00897b\",\n                        \"#00b8d4\",\n                        \"#c6ff00\",\n                        \"#ffeb3b\",\n                        \"#e65100\",\n                        \"#4e342e\",\n                        \"#9e9e9e\"\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#827717\",\n                        \"#673ab7\",\n                        \"#1a237e\",\n                        \"#ff1744\",\n                        \"#00897b\",\n                        \"#00b8d4\",\n                        \"#c6ff00\",\n                        \"#ffeb3b\",\n                        \"#e65100\",\n                        \"#4e342e\",\n                        \"#9e9e9e\"\n                    ]\n                }\n            ]\n        };\n\n        return (\n            <div id=\"chart\" className=\"menu-manaagement\">\n                <div className=\"pie-chart\">\n                    <span className=\"text-serve-card\">Services Distribution</span>\n                    <p className=\"date-text-\">Daily</p>\n                </div>\n                {allData.length > 0 || labels.length > 0 ? (\n                    <Doughnut width={200} height={150} data={data} />\n                ) : (\n                    <div className=\"data-empty\">\n                        <Spin tip=\"Loading...\">\n                            <Doughnut width={200} height={150} data={data} />\n                        </Spin>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ ussd: { listOfServiceDistribution } }) => ({\n    listOfServiceDistribution\n});\n\nexport default connect(mapStateToProps, { serviceDistribution })(ServiceDistribution);\n","import React, { Component } from \"react\";\nimport { Spin } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer\n} from \"recharts\";\nimport CustomCard from \"../../card/card\";\n\nimport \"../../dashboard/dashboard.scss\";\nimport \"../menu.scss\";\n\nconst data2 = [\n    {\n        name: \"Traffic fines\",\n        success: 10,\n        failure: 62\n    },\n    {\n        name: \"Mutuelles\",\n        success: 20,\n        failure: 3834\n    }\n];\n\nclass SuccessRate extends Component {\n    state = { data: [] };\n\n    static getDerivedStateFromProps(props) {\n        const data = props && props.listOfServiceDistribution;\n        return { data };\n    }\n\n    render() {\n        const { data } = this.state;\n\n        for (let i = 0; i < data.length; i++) {\n            delete data[i].count;\n        }\n\n        console.log(\"DATA FILTERED ===>>\", data);\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"99%\" }}>\n                    <div></div>\n                    <div>\n                        <p className=\"sales-text\">Success and Failure Rates</p>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                            {data.length > 0 ? (\n                                <BarChart\n                                    width={500}\n                                    height={300}\n                                    data={data}\n                                    margin={{\n                                        top: 20,\n                                        right: 30,\n                                        left: 20,\n                                        bottom: 5\n                                    }}>\n                                    <CartesianGrid\n                                        vertical={false}\n                                        horizontal\n                                        strokeDasharray=\"2 2\"\n                                    />\n                                    <XAxis\n                                        tick={{\n                                            fill: \"rgba(47, 63, 82, 0.5)\",\n                                            fontSize: 15\n                                        }}\n                                        stroke=\"#bdbdbd\"\n                                        dataKey=\"name\"\n                                    />\n                                    <YAxis stroke=\"#bdbdbd\" />\n                                    <Tooltip cursor={{ fill: \"#f5f5f5\" }} />\n                                    <Legend />\n                                    <Bar dataKey=\"failure\" stackId=\"a\" fill=\"#f44336\" />\n                                    <Bar dataKey=\"success\" stackId=\"a\" fill=\"#82ca9d\" />\n                                </BarChart>\n                            ) : (\n                                <div>\n                                    <Spin tip=\"Loading...\">\n                                        <div\n                                            style={{\n                                                marginRight: \"35px\"\n                                            }}>\n                                            <BarChart\n                                                className=\"bar-stack\"\n                                                width={1200}\n                                                height={300}\n                                                data={data2}>\n                                                <CartesianGrid\n                                                    vertical={false}\n                                                    horizontal\n                                                    strokeDasharray=\"2 2\"\n                                                />\n                                                <XAxis\n                                                    tick={{\n                                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                                        fontSize: 15\n                                                    }}\n                                                    stroke=\"#bdbdbd\"\n                                                    dataKey=\"name\"\n                                                />\n                                                <YAxis stroke=\"#bdbdbd\" />\n                                                <Tooltip cursor={{ fill: \"#f5f5f5\" }} />\n                                                <Legend />\n                                                <Bar\n                                                    dataKey=\"failure\"\n                                                    stackId=\"a\"\n                                                    fill=\"#f44336\"\n                                                />\n                                                <Bar\n                                                    dataKey=\"success\"\n                                                    stackId=\"a\"\n                                                    fill=\"#82ca9d\"\n                                                />\n                                            </BarChart>\n                                        </div>\n                                    </Spin>\n                                </div>\n                            )}\n                        </ResponsiveContainer>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nSuccessRate.propTypes = { listOfServiceDistribution: PropTypes.array };\n\nconst mapStateToProps = ({ ussd: { listOfServiceDistribution } }) => ({\n    listOfServiceDistribution\n});\n\nexport default connect(mapStateToProps, null)(SuccessRate);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { findDOMNode } from \"react-dom\";\nimport { Row, Col } from \"antd\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport flow from \"lodash/flow\";\n\nimport \"../menu.scss\";\n\nimport BURGERICON from \"../../../assets/burger.svg\";\nimport \"../../../pages/authentication/authentication.scss\";\nimport \"../../userGuide/profile.scss\";\n\nconst style = {\n    border: \"1px solid #f5f5f5\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    marginBottom: \".5rem\",\n    backgroundColor: \"#fafafa\",\n    cursor: \"move\",\n    width: \"65%\"\n};\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            position: props.position,\n            index: props.index\n        };\n    }\n};\n\nconst cardTarget = {\n    hover(props, monitor, component) {\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Determine rectangle on screen\n        const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n\n        // Get vertical middle\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset();\n\n        // Get pixels to the top\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n            return;\n        }\n\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n            return;\n        }\n\n        // Time to actually perform the action\n        props.moveCard(dragIndex, hoverIndex);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    }\n};\n\nclass Card extends React.Component {\n    static propTypes = {\n        connectDragSource: PropTypes.func.isRequired,\n        connectDropTarget: PropTypes.func.isRequired,\n        index: PropTypes.number.isRequired,\n        isDragging: PropTypes.bool.isRequired,\n        position: PropTypes.any.isRequired,\n        text: PropTypes.string.isRequired,\n        moveCard: PropTypes.func.isRequired\n    };\n\n    render() {\n        const {\n            text,\n            position,\n            isDragging,\n            connectDragSource,\n            connectDropTarget\n        } = this.props;\n        const opacity = isDragging ? 0 : 1;\n\n        return (\n            connectDragSource &&\n            connectDropTarget &&\n            connectDragSource(\n                connectDropTarget(\n                    <div className=\"center-draggable-cards\" style={{ ...style, opacity }}>\n                        <Row>\n                            <Col span={15}>\n                                <div>\n                                    <Row>\n                                        <Col span={4}>\n                                            <div className=\"bg-rounded-profile\">\n                                                {position}\n                                            </div>\n                                        </Col>\n                                        <Col span={20}>\n                                            <div className=\"password-container\">\n                                                <p className=\"profile-text-setting-ussd\">\n                                                    {text}\n                                                </p>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Col>\n                            <Col span={3} offset={6}>\n                                <div style={{ float: \"right\" }}>\n                                    <img className=\"\" src={BURGERICON} alt=\"logo\" />\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                )\n            )\n        );\n    }\n}\n\nexport default flow(\n    DragSource(\"card\", cardSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    })),\n    DropTarget(\"card\", cardTarget, (connect) => ({\n        connectDropTarget: connect.dropTarget()\n    }))\n)(Card);\n","import 'dotenv/config';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_USSD_BASE_URL } = process.env;\n\nexport default () => (dispatch) => dispatch(apiAction({\n  method: 'get',\n  url: `${REACT_APP_USSD_BASE_URL}/irembo/ussdapp/switchmenus`,\n  onStart: ussdActionsTypes.GET_MENU_START,\n  onEnd: ussdActionsTypes.GET_MENU_END,\n  onSuccess: ussdActionsTypes.GET_MENU_SUCCESS,\n  onFailure: ussdActionsTypes.GET_MENU_FAILURE\n}));\n","import { ussdActionsTypes } from '../../actions-types';\n\nexport default (data) => (dispatch) => dispatch({ type: ussdActionsTypes.GET_MENU_SUCCESS, payload: data });\n","import 'dotenv/config';\nimport { ussdActionsTypes } from '../../actions-types';\nimport { apiAction } from '../../../helpers';\n\nconst { REACT_APP_USSD_BASE_URL } = process.env;\n\nexport default (formData) => (dispatch) => dispatch(apiAction({\n  method: 'post',\n  url: `${REACT_APP_USSD_BASE_URL}/irembo/ussdapp/switchmenus`,\n  data: { ...formData },\n  onStart: ussdActionsTypes.POST_MENU_START,\n  onEnd: ussdActionsTypes.POST_MENU_END,\n  onSuccess: ussdActionsTypes.POST_MENU_SUCCESS,\n  onFailure: ussdActionsTypes.POST_MENU_FAILURE\n}));\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport CustomCard from \"../card/card\";\n\nimport ServiceDistribution from \"./usedService/serviceDistributionChart\";\n// import AreaChartLeft from \"./ussdPerformance/ussdPerformanceChart\";\nimport SuccessRate from \"./successRate/successRate\";\nimport Grid from \"./draggableMenu/menu\";\n\nimport \"./menu.scss\";\n\nclass MenuManagement extends Component {\n    render() {\n        return (\n            <div className=\"menu-manaagement\">\n                <p className=\"text-service\">Most Used Services</p>\n                <Row>\n                    <Col span={12}>\n                        <CustomCard className=\"card-style1\" style={{ width: \"98%\" }}>\n                            <Grid />\n                        </CustomCard>\n                    </Col>\n                    <Col span={12}>\n                        <CustomCard className=\"card-style1\" style={{ width: \"98%\" }}>\n                            <ServiceDistribution />\n                        </CustomCard>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24}>\n                        <SuccessRate />\n                    </Col>\n                </Row>\n                <Row>\n                    {/* <Col span={24}>\n                        <AreaChartLeft />\n                    </Col> */}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default MenuManagement;\n","import menuManagement from \"../../pages/menuManagement/menuManagement\";\n\nexport default {\n    exact: true,\n    name: \"Menu Management\",\n    protected: true,\n    path: \"/menu-management\",\n    component: menuManagement\n};\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport Sidebar from \"../../components/common/sidebar/sidebar\";\nimport Navbar from \"../../components/common/header/header\";\nimport MenuManagement from \"../../components/menuManagement/menuManagement\";\n\nimport \"./menuManagement.scss\";\n\nclass menuManagement extends Component {\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <Navbar title=\"USSD Menu Management\" />\n                <div className=\"bg-color\">\n                    <Sidebar />\n                    <Row>\n                        <Col span={2} />\n                        <Col span={22}>\n                            <div style={{ marginLeft: \"65px\" }}>\n                                <MenuManagement />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"profile-container\"></div>\n            </div>\n        );\n    }\n}\n\nexport default menuManagement;\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { getUptime } from \"../../../../redux/actions/USSD\";\nimport { convertSecondsTodaysOrMinutes } from \"../../../../helpers/convertSecondToDaysOrMinutes\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardLeft extends Component {\n    state = {\n        uptime: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { getUptime } = this.props;\n        getUptime(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            uptime: props && props.listOfUptime,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { uptime, loading } = this.state;\n\n        const mapIt = uptime.map((v) => v.values);\n\n        const valueOutputed = mapIt && mapIt[mapIt.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.shift();\n\n        const outputedUptime = getValue && getValue[1];\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    {loading && <Spin className=\"spin-position\" indicator={antIcon} />}\n                    <div className=\"text-ussd-center\">\n                        <div>\n                            <p className=\"text-title\">Uptime</p>\n                            <p className=\"text-minute\">\n                                {convertSecondsTodaysOrMinutes(outputedUptime)}\n                            </p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfUptime,\n        fetchUptime: { loading, message, errors }\n    }\n}) => ({\n    listOfUptime,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getUptime })(CardLeft);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { getStartTime } from \"../../../../redux/actions/USSD\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardCenter extends Component {\n    state = {\n        startTime: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { getStartTime } = this.props;\n        getStartTime(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            startTime: props && props.listOfStartTime,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { startTime, loading } = this.state;\n\n        const mapIt = startTime.map((v) => v.values);\n\n        const val = mapIt && mapIt[0];\n\n        const firstArray = val && val[0];\n\n        const startTimeValue = firstArray && firstArray[0];\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    <div className=\"text-ussd-center\">\n                        {loading && (\n                            <Spin className=\"spin-position\" indicator={antIcon} />\n                        )}\n\n                        <div>\n                            <p className=\"text-title\">Start time</p>\n                            <p className=\"text-minute\">\n                                {moment\n                                    .unix(startTimeValue)\n                                    .format(\"YYYY-MM-DD HH:mm:ss\")}\n                            </p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfStartTime,\n        fetchStartTime: { loading, message, errors }\n    }\n}) => ({\n    listOfStartTime,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getStartTime })(CardCenter);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { heapUsage } from \"../../../../redux/actions/USSD\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { round } from \"../../../../helpers/roundNumber\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardRight extends Component {\n    state = {\n        heapUsage: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { heapUsage } = this.props;\n        heapUsage(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            heapUsage: props && props.listOfHeapRate,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { heapUsage, loading } = this.state;\n\n        const mapIt = heapUsage.map((v) => v.values);\n\n        const val = mapIt.slice(-1)[0];\n\n        const valueOutputed = val && val[val.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.slice(1);\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"95%\", height: \"95px\" }}>\n                    {loading && <Spin className=\"spin-position\" indicator={antIcon} />}\n                    <div className=\"text-ussd-center\">\n                        <div>\n                            <p className=\"text-title\">Heap used</p>\n                            <p className=\"text-minute\">{round(getValue, 2)}%</p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfHeapRate,\n        fetchHeapRate: { loading, message, errors }\n    }\n}) => ({\n    listOfHeapRate,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { heapUsage })(CardRight);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport { nonHeapUsage } from \"../../../../redux/actions/USSD\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { round } from \"../../../../helpers/roundNumber\";\n\nimport \"../../dashboard.scss\";\n\nconst startDate = moment().subtract(1, \"days\").unix();\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass CardRightLast extends Component {\n    state = {\n        nonHeapUsage: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { nonHeapUsage } = this.props;\n        nonHeapUsage(startDate, moment().unix());\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n\n    static getDerivedStateFromProps(props) {\n        return {\n            nonHeapUsage: props && props.listOfNonHeapRate,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { nonHeapUsage, loading } = this.state;\n\n        const mapIt = nonHeapUsage.map((v) => v.values);\n\n        const val = mapIt.slice(-1)[0];\n\n        const valueOutputed = val && val[val.length - 1];\n\n        const getValue = valueOutputed && valueOutputed.slice(1);\n\n        return (\n            <div onChange={handleChange} className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"96%\", height: \"95px\" }}>\n                    <div className=\"text-ussd-center\">\n                        {loading && (\n                            <Spin className=\"spin-position\" indicator={antIcon} />\n                        )}\n\n                        <div>\n                            <p className=\"text-title\">Non-Heap used</p>\n                            <p className=\"text-minute\">{round(getValue, 2)}%</p>\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfNonHeapRate,\n        fetchNonHeapRate: { loading, message, errors }\n    }\n}) => ({\n    listOfNonHeapRate,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { nonHeapUsage })(CardRightLast);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../../common/customTooltip/customTooltip\";\nimport { getRateAgent } from \"../../../../redux/actions/USSD\";\nimport { startDate } from \"../../../../helpers/getDifferentTime\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { mapArrayToObject } from \"../../../../helpers/changeArrayToObject\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../../helpers/formatXaxis\";\n\nimport \"../../../dashboard/dashboard.scss\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass USSDAreaChartLeft extends Component {\n    state = {\n        rate: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { getRateAgent } = this.props;\n        getRateAgent(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            rate: props && props.listOfRateAgent,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { rate, loading } = this.state;\n\n        const mapIt = rate.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        var objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"99%\" }}>\n                    <div>\n                        <p className=\"sales-text\">Rate</p>\n\n                        {loading && (\n                            <Spin className=\"spin-position-chart\" indicator={antIcon} />\n                        )}\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            <AreaChart\n                                onChange={handleChange}\n                                width={400}\n                                height={200}\n                                data={objs}\n                                syncId=\"anyIdd2\"\n                                margin={{\n                                    top: 10,\n                                    right: 40,\n                                    left: 0,\n                                    bottom: 0\n                                }}>\n                                <CartesianGrid\n                                    vertical={false}\n                                    horizontal\n                                    strokeDasharray=\"1 1\"\n                                />\n                                <XAxis\n                                    minTickGap={30}\n                                    stroke=\"white\"\n                                    tickFormatter={formatXAxis}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    dataKey=\"name\"\n                                />\n                                <YAxis\n                                    orientation=\"left\"\n                                    tickFormatter={(label) => `${label} ops`}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    stroke=\"white\"\n                                    interval=\"preserveStartEnd\"\n                                />\n                                <Tooltip\n                                    // labelFormatter={(name) => \"Time Taken: \" + name}\n                                    // labelFormatter={(name) => \"Text: \" + name}\n                                    content={\n                                        <CustomTooltip text=\"- HTTP\" textRight=\"ops\" />\n                                    }\n                                    cursor={true}\n                                />\n                                <Area\n                                    type=\"monotone\"\n                                    dataKey=\"uv\"\n                                    stroke=\"#40c4ff\"\n                                    fill=\"rgba(159, 219, 253, 0.25)\"\n                                />\n                            </AreaChart>\n                        </ResponsiveContainer>\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 4) : \"\"}\n                            </span>{\" \"}\n                            ops\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfRateAgent,\n        fetchRateAgent: { loading, message, errors }\n    }\n}) => ({\n    listOfRateAgent,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { getRateAgent })(USSDAreaChartLeft);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../../common/customTooltip/customTooltip\";\nimport { errors } from \"../../../../redux/actions/USSD\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { mapArrayToObject } from \"../../../../helpers/changeArrayToObject\";\nimport { startDate } from \"../../../../helpers/getDifferentTime\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../../helpers/formatXaxis\";\n\nimport \"../../../dashboard/dashboard.scss\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass USSDAreaChartCenter extends Component {\n    state = {\n        errors: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { errors } = this.props;\n        errors(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            errors: props && props.listOfError,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { errors, loading } = this.state;\n\n        const mapIt = errors.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        var objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"98%\", height: \"415px\" }}>\n                    <div>\n                        <p className=\"sales-text\">Errors</p>\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            {loading ? (\n                                <div className=\"center-spin-vertically\">\n                                    <Spin indicator={antIcon} />\n                                </div>\n                            ) : errors && errors.length === 0 ? (\n                                <div className=\"center-spin-vertically\">\n                                    <p className=\"no-data\">No data..</p>\n                                </div>\n                            ) : (\n                                <AreaChart\n                                    width={300}\n                                    height={200}\n                                    data={objs}\n                                    syncId=\"anyIdd222\"\n                                    margin={{\n                                        top: 10,\n                                        right: 30,\n                                        left: 0,\n                                        bottom: 0\n                                    }}>\n                                    <CartesianGrid\n                                        vertical={false}\n                                        horizontal\n                                        strokeDasharray=\"1 1\"\n                                    />\n                                    <XAxis\n                                        minTickGap={30}\n                                        stroke=\"white\"\n                                        tickFormatter={formatXAxis}\n                                        tick={{\n                                            fill: \"rgba(47, 63, 82, 0.5)\",\n                                            fontSize: 12\n                                        }}\n                                        dataKey=\"name\"\n                                    />\n                                    <YAxis\n                                        orientation=\"left\"\n                                        tickFormatter={(label) => `${label} ops`}\n                                        tick={{\n                                            fill: \"rgba(47, 63, 82, 0.5)\",\n                                            fontSize: 12\n                                        }}\n                                        stroke=\"white\"\n                                        interval=\"preserveStartEnd\"\n                                    />\n                                    <Tooltip\n                                        content={\n                                            <CustomTooltip\n                                                text=\"- HTTP\"\n                                                textRight=\"ops\"\n                                            />\n                                        }\n                                        cursor={true}\n                                    />\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey=\"uv\"\n                                        stroke=\"rgba(159, 219, 253, 0.46)\"\n                                        fill=\"rgba(159, 219, 253, 0.46)\"\n                                    />\n                                </AreaChart>\n                            )}\n                        </ResponsiveContainer>\n                        <span></span>\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 4) : \"\"}\n                            </span>{\" \"}\n                            ops\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfError,\n        fetchError: { loading, message, errors }\n    }\n}) => ({\n    listOfError,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { errors })(USSDAreaChartCenter);\n","import React, { Component } from \"react\";\nimport CustomCard from \"../../../card/card\";\nimport {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer\n} from \"recharts\";\nimport { CustomTooltip } from \"../../../common/customTooltip/customTooltip\";\nimport { durationAgent } from \"../../../../redux/actions/USSD\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { mapArrayToObject } from \"../../../../helpers/changeArrayToObject\";\nimport { startDate } from \"../../../../helpers/getDifferentTime\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { round } from \"../../../../helpers/roundNumber\";\nimport { formatXAxis } from \"../../../../helpers/formatXaxis\";\n\nimport \"../../../dashboard/dashboard.scss\";\n\nlet durationChart = 1000;\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 20 }} spin />;\n\nclass USSDAreaChartRight extends Component {\n    state = {\n        duration: [],\n        loading: false\n    };\n\n    componentDidMount = () => {\n        const { durationAgent } = this.props;\n        durationAgent(startDate, moment().unix());\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            duration: props && props.listOfDurationAgent,\n            loading: props && props.loading\n        };\n    }\n\n    render() {\n        const { handleChange } = this.props;\n        const { duration, loading, animation } = this.state;\n\n        const mapIt = duration.map((v) => v.values);\n\n        const [Array] = mapIt;\n\n        var objs = Array && Array.map(mapArrayToObject);\n\n        const getUVvalue = objs && objs.map((v) => v.uv);\n\n        const val = getUVvalue && getUVvalue.slice(-1)[0];\n\n        return (\n            <div className=\"dashboard\">\n                <CustomCard\n                    className=\"card-style padding-small-card\"\n                    style={{ width: \"99%\" }}>\n                    <div>\n                        <p className=\"sales-text\">Duration</p>\n                        {loading && (\n                            <Spin className=\"spin-position-chart\" indicator={antIcon} />\n                        )}\n                        <ResponsiveContainer width=\"100%\" height={270}>\n                            <AreaChart\n                                onChange={handleChange}\n                                width={400}\n                                height={200}\n                                data={objs}\n                                syncId=\"anyIdd21231\"\n                                margin={{\n                                    top: 10,\n                                    right: 40,\n                                    left: 0,\n                                    bottom: 0\n                                }}>\n                                <CartesianGrid\n                                    vertical={false}\n                                    horizontal\n                                    strokeDasharray=\"1 1\"\n                                />\n                                <XAxis\n                                    minTickGap={70}\n                                    stroke=\"white\"\n                                    tickFormatter={formatXAxis}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    dataKey=\"name\"\n                                />\n                                <YAxis\n                                    orientation=\"left\"\n                                    tickFormatter={(label) => `${label} ms`}\n                                    tick={{\n                                        fill: \"rgba(47, 63, 82, 0.5)\",\n                                        fontSize: 12\n                                    }}\n                                    stroke=\"white\"\n                                    interval=\"preserveStartEnd\"\n                                />\n                                <Tooltip\n                                    content={\n                                        <CustomTooltip\n                                            text=\"- HTTP - AVG\"\n                                            textRight=\"ms\"\n                                        />\n                                    }\n                                    cursor={true}\n                                />\n                                <Area\n                                    animationDuration={durationChart}\n                                    isAnimationActive={animation}\n                                    type=\"monotone\"\n                                    dataKey=\"uv\"\n                                    stroke=\"#40c4ff\"\n                                    fill=\"rgba(159, 219, 253, 0.25)\"\n                                />\n                            </AreaChart>\n                        </ResponsiveContainer>\n\n                        <div className=\"footer-contain\">\n                            <span>\n                                {\" \"}\n                                <hr className=\"new4\" />{\" \"}\n                            </span>\n                            <span className=\"text-footer-http\">HTTP AVG Current: </span>\n                            <span className=\"val-style\">\n                                {!isNaN(val) ? round(val, 2) : \"\"}\n                            </span>{\" \"}\n                            ms\n                        </div>\n                    </div>\n                </CustomCard>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    ussd: {\n        listOfDurationAgent,\n        fetchDurationAgent: { loading, message, errors }\n    }\n}) => ({\n    listOfDurationAgent,\n    loading,\n    message,\n    errors\n});\n\nexport default connect(mapStateToProps, { durationAgent })(USSDAreaChartRight);\n","import React, { Component } from \"react\";\nimport { Row, Col, Select, Layout } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CardLeft from \"./smallCards/cardLeft\";\nimport moment from \"moment\";\nimport CardCenter from \"./smallCards/cardCenter\";\nimport CardRight from \"./smallCards/cardRight\";\nimport {\n    getRateAgent,\n    durationAgent,\n    getStartTime,\n    getUptime,\n    heapUsage,\n    nonHeapUsage\n} from \"../../../redux/actions/USSD\";\nimport { SelectOption } from \"../exportSelect\";\nimport { options } from \"../../../helpers\";\nimport CardRightLast from \"./smallCards/cardRightLast\";\nimport USSDAreaChartLeft from \"./ussdChart/RatesChart\";\nimport USSDAreaChartCenter from \"./ussdChart/ErrorsChart\";\nimport { customStyles } from \"../../../helpers/getDifferentTime\";\n\nimport \"./analytics.scss\";\nimport USSDAreaChartRight from \"./ussdChart/durationChart\";\n\nconst { Option } = Select;\n\nconst { Sider, Content } = Layout;\n\nfunction handleChange(value) {\n    console.log(`selected ${value}`);\n}\n\nclass AnalyticsView extends Component {\n    state = {\n        selectedOption: \"\"\n    };\n\n    handleChange = (selectedOption) => {\n        const { getRateAgent, durationAgent } = this.props;\n        this.setState({ selectedOption });\n\n        if (selectedOption) {\n            const { value, label } = selectedOption;\n            const { startDate, endDate } = value;\n\n            if (label.includes(\"Last 24 hour\")) {\n                getRateAgent(startDate, moment().unix(), false);\n                durationAgent(startDate, moment().unix(), false);\n            } else {\n                getRateAgent(startDate, endDate, true);\n                durationAgent(startDate, endDate, true);\n            }\n        }\n    };\n\n    render() {\n        const { selectedOption } = this.state;\n        return (\n            <div className=\"dashboard-main-container\">\n                <Layout>\n                    <Layout style={{ width: \"99%\", backgroundColor: \"#fafafa\" }}>\n                        <Content style={{ backgroundColor: \"#fafafa\" }}>\n                            <Row className=\"select-draw-padding\">\n                                <Col className=\"calendar-position\" span={18} push={6}>\n                                    {\" \"}\n                                </Col>\n\n                                <Col span={6} pull={18}>\n                                    <div className=\"container\">\n                                        <div className=\"box1\">\n                                            <div className=\"application-border\">\n                                                <p>Applications</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"box2\">\n                                            <Select\n                                                className=\"select-style\"\n                                                defaultValue=\"lucy\"\n                                                style={{ width: 220 }}\n                                                onChange={handleChange}>\n                                                <Option value=\"lucy\">\n                                                    <Link to=\"/dashboard\">\n                                                        irembo-ussd-app\n                                                    </Link>\n                                                </Option>\n                                                <Option value=\"jack\">\n                                                    <Link to=\"/agent\">\n                                                        irembo-ussd-agent\n                                                    </Link>\n                                                </Option>\n                                            </Select>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Content>\n                        <Sider style={{ backgroundColor: \"#fafafa\" }}>\n                            <div className=\"calendar-position\">\n                                <div className=\"search-width\">\n                                    <SelectOption\n                                        value={selectedOption}\n                                        onChange={this.handleChange}\n                                        options={options}\n                                        styles={customStyles}\n                                        placeholder=\"Today\"\n                                    />\n                                </div>\n                            </div>\n                        </Sider>\n                    </Layout>\n                </Layout>\n\n                <Row>\n                    <Col span={6}>\n                        <CardLeft handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardCenter handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardRight handleChange={this.handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <CardRightLast handleChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={12}>\n                        <USSDAreaChartLeft\n                            handleChange={this.handleChange}\n                            selectedOption={selectedOption}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <USSDAreaChartCenter />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24}>\n                        <USSDAreaChartRight\n                            handleChange={this.handleChange}\n                            selectedOption={selectedOption}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {\n    getRateAgent,\n    durationAgent,\n    getStartTime,\n    getUptime,\n    heapUsage,\n    nonHeapUsage\n})(AnalyticsView);\n","import Signin from './authentication/Sign-in';\nimport Analytics from './analytics/analytics';\nimport profile from './profile/profile';\nimport menuMangement from './menuManagement/menuManagement';\nimport agent from './analytics/agent';\n\nexport default [Signin, Analytics, profile, menuMangement, agent];\n","import Analytics from '../../pages/dashboard/agent';\n\nexport default {\n  exact: true,\n  name: 'Agent',\n  protected: true,\n  path: '/agent',\n  component: Analytics\n};\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport Sidebar from '../../components/common/sidebar/sidebar';\nimport Navbar from '../../components/common/header/header';\nimport AnalyticsView from '../../components/dashboard/agent/analytics';\n\nimport './analytics.scss';\n\nclass Analytics extends Component {\n  render() {\n    return (\n            <div className=\"dashboard\">\n                <Navbar title=\"Dashboard Agent\" />\n                <div className=\"bg-color\">\n                    <Sidebar />\n                    <Row>\n                        <Col span={2} />\n                        <Col span={22}>\n                            <div style={{ marginLeft: '65px' }}>\n                                <AnalyticsView />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"profile-container\"></div>\n            </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React from 'react';\nimport { Result } from 'antd';\n\nconst NotFoundPage = () => (\n        <div>\n            <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"Sorry, the page you visited does not exist.\"\n            />\n        </div>\n);\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SockJsClient from 'react-stomp';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ussdActionsTypes } from './redux/actions-types';\n// import UssdPerformanceWebsocket from './components/websocket/ussdPerformance';\nimport store from './redux/store';\n\nimport routes from './routes';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { serviceDistribution } from './redux/actions/USSD';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nimport { setCurrentUser } from './redux/actions/user/get';\n\nconst { REACT_APP_IREMBO_USSD_WEB_SOCKET } = process.env;\n\nclass App extends Component {\n    unsubscribeFromAuth = null;\n\n    componentDidMount() {\n      const { setCurrentUser, serviceDistribution } = this.props;\n      serviceDistribution();\n\n      this.onMessageReceive = (msg) => {\n        store.dispatch({\n          type: ussdActionsTypes.GET_SERVICE_DISTRIBUTION,\n          payload: msg\n        });\n      };\n\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n\n          userRef.onSnapshot((Snapshot) => {\n            setCurrentUser({\n              id: Snapshot.id,\n              ...Snapshot.data() // to get the data from the user property.\n            });\n          });\n        }\n        setCurrentUser(userAuth);\n      });\n    }\n\n    // close subscription when unmount\n    componentWillUnmount() {\n      this.unsubscribeFromAuth();\n    }\n\n    sendMessage = (msg) => {\n      this.clientRef.sendMessage('/topic/services', msg);\n    };\n\n    render() {\n      const { currentUser } = this.props;\n      return (\n            <div>\n                <div>\n                    <SockJsClient\n                        url={REACT_APP_IREMBO_USSD_WEB_SOCKET}\n                        // onConnect={console.log('Connection established.!')}\n                        subscribeHeader={null}\n                        topics={['/topic/services']}\n                        onMessage={(msg) => this.onMessageReceive(msg)}\n                        ref={(client) => {\n                          this.clientRef = client;\n                        }}\n                    />\n                </div>\n                <Router>\n                    {/* <UssdPerformanceWebsocket /> */}\n                    <Switch>\n                        {routes.map((route) => (\n                            <Route\n                                key={route.name}\n                                exact\n                                path={route.path}\n                                protected={route.protected}\n                                render={(props) => {\n                                  document.title = route.name;\n                                  return (\n                                    (route.protected && !currentUser && (\n                                            <Redirect to=\"/\" />\n                                    )) || (\n                                            <route.component\n                                                location={props.location}\n                                                history={props.history}\n                                                match={props.match}\n                                            />\n                                    )\n                                  );\n                                }}></Route>\n                        ))}\n                        <Route path=\"*\" exact component={NotFoundPage} />\n                    </Switch>\n                </Router>\n            </div>\n      );\n    }\n}\n\nApp.propTypes = {\n  currentUser: PropTypes.object,\n  serviceDistribution: PropTypes.func,\n  setCurrentUser: PropTypes.func\n};\n\nexport const mapStateToProps = ({ user: { currentUser } }) => ({ currentUser });\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  serviceDistribution: () => dispatch(serviceDistribution)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { UserActionsTypes } from '../../actions-types/UserActionsTypes';\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionsTypes.SET_CURRENT_USER,\n  payload: user\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <DndProvider backend={HTML5Backend}>\n            <App />\n        </DndProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}